{
  "swagger": "2.0",
  "info": {
    "version": "2",
    "title": "OS2Kitos API - V2",
    "description": "<b><i>OBS: Dokumentation for V1 (authorize endpoint) findes ved at skifte version på dokumentet til 1 øverst på siden</i></b><br/><br/>KITOS API V2 understøtter både læse- og skriveoperationer for de væsentlige registreringsobjekter i KITOS. <br/><br/>Se mere om designet og konventionerne i API'et her: <a href='https://os2web.atlassian.net/wiki/spaces/KITOS/pages/2059599873/API+Design+V2'>API V2</a>.<br/><br/>Generelt er anvendelsen af KITOS API(er) beskrevet på projektets <a href='https://os2web.atlassian.net/wiki/spaces/KITOS/pages/658145384/S+dan+kommer+du+igang'>Confluence side</a>.<br/><br/><b>KENDTE FEJL OG BEGRÆNSNINGER PÅ DENNE HJÆLPESIDE SAMT WORKAROUND</b><br/>Felter der består af lister af enum værdier vises ikke rigtigt i denne UI. Konkret vises de mulige valg ikke, men i stedet vises 'Array[string]'. For et retvisende billede af dokumentationen anbefales derfor følgende workaround:<br/><br/>- JSON downloades via 'docs linket i toppen'<br/>- Indholdet indsættes i anden editor f.eks. <a href='https://editor.swagger.io' target='_blank'>Swagger.io</a><br/><br/><b>BEMÆRK</b>: Funktionen 'Try it out' virker p.t. ikke i den eksterne editor."
  },
  "host": "kitos.dk",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/v2/data-processing-registrations": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Returns all Data-Processing-Registrations available to the user",
        "operationId": "get_Many_DataProcessingRegistrationV2_GetDataProcessingRegistrations",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "Organization UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemUuid",
            "in": "query",
            "description": "System UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemUsageUuid",
            "in": "query",
            "description": "SystemUsage UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dataProcessorUuid",
            "in": "query",
            "description": "UUID of a data processor in the registration",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subDataProcessorUuid",
            "in": "query",
            "description": "UUID of a sub data processor in the registration",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "agreementConcluded",
            "in": "query",
            "description": "Filter based on whether or not an agreement has been concluded",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataProcessingRegistrationResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Create a new data processing registration",
        "operationId": "post_Single_DataProcessingRegistrationV2_PostDataProcessingRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDataProcessingRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataProcessingRegistrationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/data-processing-registrations/{uuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Returns a specific Data-Processing-Registration",
        "operationId": "get_Single_DataProcessingRegistrationV2_GetDataProcessingRegistration",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of Data-Processing-Registration entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataProcessingRegistrationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Perform a full update of an existing data processing registration.\r\nNote: PUT expects a full version of the updated registration. For partial updates, please use PATCH.",
        "operationId": "put_Single_DataProcessingRegistrationV2_PutDataProcessingRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the data processing registration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDataProcessingRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataProcessingRegistrationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Removes an existing data processing registration.",
        "operationId": "delete_Single_DataProcessingRegistrationV2_DeleteDataProcessingRegistration",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the data processing registration",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - DataProcessingRegistration "
        ],
        "summary": "Allows partial updates of an existing data processing registration using json merge patch semantics (RFC7396)",
        "operationId": "patch_Single_DataProcessingRegistrationV2_PatchDataProcessingRegistration",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the data processing registration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDataProcessingRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataProcessingRegistrationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-basis-for-transfer-types": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationBasisForTransferType "
        ],
        "summary": "Returns Data Processing Registration basis for transfer options which are available for new registrations within the organization",
        "operationId": "get_Many_DataProcessingRegistrationBasisForTransferTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the basis for transfer availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-basis-for-transfer-types/{basisForTransferUuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationBasisForTransferType "
        ],
        "summary": "Returns requested Data Processing Registration basis for transfer",
        "operationId": "get_Single_DataProcessingRegistrationBasisForTransferTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basisForTransferUuid",
            "in": "path",
            "description": "basis for transfer identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the basis for transfer availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-country-types": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationCountryType "
        ],
        "summary": "Returns Data Processing Registration country options which are available for new registrations within the organization",
        "operationId": "get_Many_DataProcessingRegistrationCountryTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the country availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-country-types/{countryUuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationCountryType "
        ],
        "summary": "Returns requested Data Processing Registration country",
        "operationId": "get_Single_DataProcessingRegistrationCountryTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryUuid",
            "in": "path",
            "description": "country identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the country availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-data-responsible-types": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationDataResponsibleType "
        ],
        "summary": "Returns Data Processing Registration data responsible options which are available for new registrations within the organization",
        "operationId": "get_Many_DataProcessingRegistrationDataResponsibleTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the data responsible availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-data-responsible-types/{dataResponsibleUuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationDataResponsibleType "
        ],
        "summary": "Returns requested Data Processing Registration data responsible",
        "operationId": "get_Single_DataProcessingRegistrationDataResponsibleTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataResponsibleUuid",
            "in": "path",
            "description": "data responsible identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the data responsible availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-oversight-types": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationOversightType "
        ],
        "summary": "Returns Data Processing Registration oversight options which are available for new registrations within the organization",
        "operationId": "get_Many_DataProcessingRegistrationOversightTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the oversight availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-oversight-types/{oversightUuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationOversightType "
        ],
        "summary": "Returns requested Data Processing Registration oversight",
        "operationId": "get_Single_DataProcessingRegistrationOversightTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "oversightUuid",
            "in": "path",
            "description": "oversight identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the oversight availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-role-types": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationRoleType "
        ],
        "summary": "Returns Data Processing Registration role types which are available for new registrations within the organization",
        "operationId": "get_Many_DataProcessingRegistrationRoleTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the Data Processing Registration role availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/data-processing-registration-role-types/{dataProcessingRegistrationRoleTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - DataProcessingRegistrationRoleType "
        ],
        "summary": "Returns requested Data Processing Registration role type",
        "operationId": "get_Single_DataProcessingRegistrationRoleTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataProcessingRegistrationRoleTypeUuid",
            "in": "path",
            "description": "role type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the role type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/delta-feed/deleted-entities": {
      "get": {
        "tags": [
          "API V2 - DeltaFeed "
        ],
        "summary": "Returns a feed of deleted items, optionally since a specified time (UTC)",
        "operationId": "get_Many_DeltaFeedV2_GetDeletedObjects",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "description": "Filter results based on tracked entity type.",
            "required": false,
            "type": "string",
            "enum": [
              "ItSystem",
              "ItSystemUsage",
              "ItInterface",
              "ItContract",
              "DataProcessingRegistration",
              "OrganizationUnit"
            ]
          },
          {
            "name": "deletedSinceUTC",
            "in": "query",
            "description": "Results will be returned where 'deletedTimeStamp &gt;= deletedSinceUTC'",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackingEventResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v2/it-contracts": {
      "get": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Returns all IT-Contracts available to the current user within the provided organization context",
        "operationId": "get_Many_ItContractV2_GetItContracts",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "Organization UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemUuid",
            "in": "query",
            "description": "Associated system UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemUsageUuid",
            "in": "query",
            "description": "Associated system usage UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dataProcessingRegistrationUuid",
            "in": "query",
            "description": "Associated data processing registration UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "responsibleOrgUnitUuid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "supplierUuid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameContent",
            "in": "query",
            "description": "Name content filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItContractResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Creates a new it-contract in the requested organization",
        "operationId": "post_Single_ItContractV2_PostItContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewContractRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItContractResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/it-contracts/{contractUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Returns requested IT-Contract",
        "operationId": "get_Single_ItContractV2_GetItContract",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractUuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItContractResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Updates an existing it-contract\r\nNote: PUT expects a full version of the updated contract. For partial updates, please use PATCH.",
        "operationId": "put_Single_ItContractV2_PutItContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractUuid",
            "in": "path",
            "description": "UUID of the contract in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Full update of the contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateContractRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItContractResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Delete an existing contract",
        "operationId": "delete_Single_ItContractV2_DeleteItContract",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "contractUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItContract "
        ],
        "summary": "Allows partial updates of an existing it-contract using json merge patch semantics (RFC7396)",
        "operationId": "patch_Single_ItContractV2_PatchItContract",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractUuid",
            "in": "path",
            "description": "UUID of the contract in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Full update of the contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateContractRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItContractResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/it-contract-agreement-element-types": {
      "get": {
        "tags": [
          "API V2 - ItContractAgreementElementType "
        ],
        "summary": "Returns It-Contract agreement element type options",
        "operationId": "get_Many_ItContractAgreementElementTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the agreement element types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-agreement-element-types/{agreementElementTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractAgreementElementType "
        ],
        "summary": "Returns requested It-Contract agreement element type",
        "operationId": "get_Single_ItContractAgreementElementTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "agreementElementTypeUuid",
            "in": "path",
            "description": "agreement element type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the agreement element type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-agreement-extension-option-types": {
      "get": {
        "tags": [
          "API V2 - ItContractAgreementExtensionOptionType "
        ],
        "summary": "Returns It-Contract agreement extension option type options",
        "operationId": "get_Many_ItContractAgreementExtensionOptionTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the agreement extension option types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-agreement-extension-option-types/{agreementExtensionOptionTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractAgreementExtensionOptionType "
        ],
        "summary": "Returns requested It-Contract agreement extension option type",
        "operationId": "get_Single_ItContractAgreementExtensionOptionTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "agreementExtensionOptionTypeUuid",
            "in": "path",
            "description": "agreement extension option type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the agreement extension option type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-contract-template-types": {
      "get": {
        "tags": [
          "API V2 - ItContractContractTemplateType "
        ],
        "summary": "Returns It-Contract contract template type options",
        "operationId": "get_Many_ItContractContractTemplateTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the contract template types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-contract-template-types/{contractTemplateTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractContractTemplateType "
        ],
        "summary": "Returns requested It-Contract contract template type",
        "operationId": "get_Single_ItContractContractTemplateTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractTemplateTypeUuid",
            "in": "path",
            "description": "contract template type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the contract template type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-contract-types": {
      "get": {
        "tags": [
          "API V2 - ItContractContractType "
        ],
        "summary": "Returns It-Contract contract type options",
        "operationId": "get_Many_ItContractContractTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the contract types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-contract-types/{contractTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractContractType "
        ],
        "summary": "Returns requested It-Contract contract type",
        "operationId": "get_Single_ItContractContractTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractTypeUuid",
            "in": "path",
            "description": "contract type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the contract type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-criticality-types": {
      "get": {
        "tags": [
          "API V2 - ItContractCriticalityType "
        ],
        "summary": "Returns It-Contract criticality type options",
        "operationId": "get_Many_ItContractCriticalityTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the criticality types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-criticality-types/{criticalityTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractCriticalityType "
        ],
        "summary": "Returns requested It-Contract criticality type",
        "operationId": "get_Single_ItContractCriticalityTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "criticalityTypeUuid",
            "in": "path",
            "description": "criticality type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the criticality type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-notice-period-month-types": {
      "get": {
        "tags": [
          "API V2 - ItContractNoticePeriodMonthType "
        ],
        "summary": "Returns It-Contract notice period month type options",
        "operationId": "get_Many_ItContractNoticePeriodMonthTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the notice period month types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-notice-period-month-types/{noticePeriodMonthTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractNoticePeriodMonthType "
        ],
        "summary": "Returns requested It-Contract notice period month type",
        "operationId": "get_Single_ItContractNoticePeriodMonthTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noticePeriodMonthTypeUuid",
            "in": "path",
            "description": "notice period month type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the notice period month type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-payment-frequency-types": {
      "get": {
        "tags": [
          "API V2 - ItContractPaymentFrequencyType "
        ],
        "summary": "Returns It-Contract payment frequency type options",
        "operationId": "get_Many_ItContractPaymentFrequencyTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the payment frequency types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-payment-frequency-types/{paymentFrequencyTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractPaymentFrequencyType "
        ],
        "summary": "Returns requested It-Contract payment frequency type",
        "operationId": "get_Single_ItContractPaymentFrequencyTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentFrequencyTypeUuid",
            "in": "path",
            "description": "payment frequency type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the payment frequency type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-payment-model-types": {
      "get": {
        "tags": [
          "API V2 - ItContractPaymentModelType "
        ],
        "summary": "Returns It-Contract payment model type options",
        "operationId": "get_Many_ItContractPaymentModelTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the payment model types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-payment-model-types/{paymentModelTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractPaymentModelType "
        ],
        "summary": "Returns requested It-Contract payment model type",
        "operationId": "get_Single_ItContractPaymentModelTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentModelTypeUuid",
            "in": "path",
            "description": "payment model type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the payment model type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-price-regulation-types": {
      "get": {
        "tags": [
          "API V2 - ItContractPriceRegulationType "
        ],
        "summary": "Returns It-Contract price regulation type options",
        "operationId": "get_Many_ItContractPriceRegulationTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the price regulation types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-price-regulation-types/{priceRegulationTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractPriceRegulationType "
        ],
        "summary": "Returns requested It-Contract price regulation type",
        "operationId": "get_Single_ItContractPriceRegulationTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "priceRegulationTypeUuid",
            "in": "path",
            "description": "price regulation type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the price regulation type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-procurement-strategy-types": {
      "get": {
        "tags": [
          "API V2 - ItContractProcurementStrategy "
        ],
        "summary": "Returns It-Contract procurement strategy type options",
        "operationId": "get_Many_ItContractProcurementStrategyV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the procurement strategy types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-procurement-strategy-types/{procurementStrategyTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractProcurementStrategy "
        ],
        "summary": "Returns requested It-Contract procurement strategy type",
        "operationId": "get_Single_ItContractProcurementStrategyV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "procurementStrategyTypeUuid",
            "in": "path",
            "description": "procurement strategy type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the procurement strategy type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-purchase-types": {
      "get": {
        "tags": [
          "API V2 - ItContractPurchaseType "
        ],
        "summary": "Returns It-Contract purchase type options",
        "operationId": "get_Many_ItContractPurchaseTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the purchase types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-purchase-types/{purchaseTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractPurchaseType "
        ],
        "summary": "Returns requested It-Contract purchase type",
        "operationId": "get_Single_ItContractPurchaseTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "purchaseTypeUuid",
            "in": "path",
            "description": "purchase type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the purchase type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-role-types": {
      "get": {
        "tags": [
          "API V2 - ItContractRoleType "
        ],
        "summary": "Returns It Contract role types which are available for new registrations within the organization",
        "operationId": "get_Many_ItContractRoleTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the It Contract role availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleOptionResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-contract-role-types/{contractRoleTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItContractRoleType "
        ],
        "summary": "Returns requested It Contract role type",
        "operationId": "get_Single_ItContractRoleTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractRoleTypeUuid",
            "in": "path",
            "description": "role type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the role type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interfaces": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns IT-Interfaces available to the user",
        "operationId": "get_Many_ItInterfaceV2_GetItInterfaces",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "exposedBySystemUuid",
            "in": "query",
            "description": "IT-System UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "description": "If set to true, the response will also include deactivated it-interfaces",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "nameEquals",
            "in": "query",
            "description": "Include only interfaces with a name equal to the parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "usedInOrganizationUuid",
            "in": "query",
            "description": "Filter by UUID of an organization which has taken the related it-system into use through an it-system-usage resource",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Filter by contents of the name",
            "required": false,
            "type": "string"
          },
          {
            "name": "interfaceId",
            "in": "query",
            "description": "Include only interfaces with an InterfaceId equal to the parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "Query it-interfaces created in a specific organization",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItInterfaceResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Creates a new IT-Interface based on given input values",
        "operationId": "post_Single_ItInterfaceV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "A collection of specific IT-Interface values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateItInterfaceRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/it-interfaces/{uuid}": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns requested IT-Interface",
        "operationId": "get_Single_ItInterfaceV2_GetItInterface",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-Interface UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Delete an It-interface\r\nConstraints:\r\n- Exposing it-system must be reset before deleting this it-interface",
        "operationId": "delete_Single_ItInterfaceV2_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the interface in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Allows partial updates of an existing it-interface using json merge patch semantics (RFC7396)",
        "operationId": "patch_Single_ItInterfaceV2_Patch",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the interface in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Updates for the interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItInterfaceRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interfaces/{uuid}/data": {
      "post": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Creates a new IT-Interface data description",
        "operationId": "post_Single_ItInterfaceV2_PostDataDescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A collection of specific IT-Interface data description values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItInterfaceDataRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItInterfaceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v2/it-interfaces/{uuid}/data/{dataDescriptionUuid}": {
      "put": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Replace an existing IT-Interface data description",
        "operationId": "put_Single_ItInterfaceV2_PutDataDescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dataDescriptionUuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A collection of specific IT-Interface data description values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItInterfaceDataRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItInterfaceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Delete an existing IT-Interface data description",
        "operationId": "delete_Single_ItInterfaceV2_DeleteDataDescription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dataDescriptionUuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/rightsholder/it-interfaces": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns all IT-Interfaces for which the user has rights holders access",
        "operationId": "get_Many_ItInterfaceV2_GetItInterfacesAsRightsHolder",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "rightsHolderUuid",
            "in": "query",
            "description": "Uuid of the organization you want interfaces from. If not provided all available interfaces (based on access rights) will be returned",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "description": "If set to true, the response will also include deactivated it-interfaces",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RightsHolderItInterfaceResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Creates a new IT-Interface based on given input values",
        "operationId": "post_Single_ItInterfaceV2_PostItInterfaceAsRightsHolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "A collection of specific IT-Interface values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderCreateItInterfaceRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RightsHolderItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/rightsholder/it-interfaces/{uuid}": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns requested IT-Interface",
        "operationId": "get_Single_ItInterfaceV2_GetItInterfaceAsRightsHolder",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-Interface UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Sets IT-Interface values",
        "operationId": "put_Single_ItInterfaceV2_PutItInterfaceAsRightsHolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-Interface UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderWritableItInterfacePropertiesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Deactivates an IT-Interface",
        "operationId": "delete_Single_ItInterfaceV2_DeactivateItInterfaceAsRightsHolder",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-Interface UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivationReasonRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Allows partial updates of an existing it-interface using json merge patch semantics (RFC7396)",
        "operationId": "patch_Single_ItInterfaceV2_PatchItInterfaceAsRightsHolder",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the interface in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Updates for the interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderPartialUpdateItInterfaceRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItInterfaceResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interfaces/{interfaceUuid}/permissions": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns the permissions of the authenticated client in the context of a specific IT-Interface",
        "operationId": "get_Single_ItInterfaceV2_GetItInterfacePermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interfaceUuid",
            "in": "path",
            "description": "UUID of the interface entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItInterfacePermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interfaces/permissions": {
      "get": {
        "tags": [
          "API V2 - ItInterface "
        ],
        "summary": "Returns the permissions of the authenticated client for the IT-Interface resources collection in the context of an organization (IT-Interface permissions in a specific Organization)",
        "operationId": "get_Single_ItInterfaceV2_GetItInterfaceCollectionPermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceCollectionPermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interface-interface-data-types": {
      "get": {
        "tags": [
          "API V2 - ItInterfaceInterfaceDataType "
        ],
        "summary": "Returns IT-Interface 'interface data type' options which are available for new registrations within the organization",
        "operationId": "get_Many_ItInterfaceInterfaceDataTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive locations availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interface-interface-data-types/{interfaceDataTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItInterfaceInterfaceDataType "
        ],
        "summary": "Returns requested IT-Interface 'interface data type'",
        "operationId": "get_Single_ItInterfaceInterfaceDataTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interfaceDataTypeUuid",
            "in": "path",
            "description": "interface data type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive location availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interface-interface-types": {
      "get": {
        "tags": [
          "API V2 - ItInterfaceInterfaceType "
        ],
        "summary": "Returns IT-Interface 'interface-type' options which are available for new registrations within the organization",
        "operationId": "get_Many_ItInterfaceInterfaceTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive locations availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-interface-interface-types/{itInterfaceTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItInterfaceInterfaceType "
        ],
        "summary": "Returns requested IT-Interface 'interface-type'",
        "operationId": "get_Single_ItInterfaceInterfaceTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itInterfaceTypeUuid",
            "in": "path",
            "description": "archive location identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive location availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-systems": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns all IT-Systems available to the current user",
        "operationId": "get_Many_ItSystemV2_GetItSystems",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "rightsHolderUuid",
            "in": "query",
            "description": "Rightsholder UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "businessTypeUuid",
            "in": "query",
            "description": "Business type UUID filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "kleNumber",
            "in": "query",
            "description": "KLE number filter (\"NN.NN.NN\" format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "kleUuid",
            "in": "query",
            "description": "KLE UUID number filter",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "numberOfUsers",
            "in": "query",
            "description": "Greater than or equal to number of users filter",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "description": "If set to true, the response will also include deactivated it-interfaces",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "usedInOrganizationUuid",
            "in": "query",
            "description": "Filter by UUID of an organization which has taken the it-system into use through an it-system-usage resource",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameContains",
            "in": "query",
            "description": "Include only systems with a name that contains the content in the parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItSystemResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Create a new IT-System master data entity\r\nNOTE: This is for master data only. Local usages extend this with local data, and are managed through the it-system-usage resource",
        "operationId": "post_Single_ItSystemV2_PostItSystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateItSystemRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/it-systems/{uuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns requested IT-System",
        "operationId": "get_Single_ItSystemV2_GetItSystem",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "DELETE an existing it-system\r\nNOTE: This is for master data only. Local usages extend this with local data, and are managed through the it-system-usage resource\r\nConstraints:\r\n- All usages must be removed before deletion\r\n- All child systems must be removed\r\n- No interfaces may still be exposed on the it-system",
        "operationId": "delete_Single_ItSystemV2_DeleteItSystem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Update an existing it-system\r\nNOTE: This is for master data only. Local usages extend this with local data, and are managed through the it-system-usage resource",
        "operationId": "patch_Single_ItSystemV2_PostItSystem_V1",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItSystemRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/it-systems/{uuid}/hierarchy": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns hierarchy for the specified IT-System",
        "operationId": "get_Many_ItSystemV2_GetHierarchy",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegistrationHierarchyNodeWithActivationStatusResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/rightsholder/it-systems": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns IT-Systems for which the current user has rights holders access",
        "operationId": "get_Many_ItSystemV2_GetItSystemsByRightsHoldersAccess",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "rightsHolderUuid",
            "in": "query",
            "description": "Optional filtering if a user is rights holder in multiple organizations and wishes to scope the request to a single one",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "description": "If set to true, the response will also include deactivated it-interfaces",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RightsHolderItSystemResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Creates a new IT-System based on given input values",
        "operationId": "post_Single_ItSystemV2_PostItSystemAsRightsHolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "A collection of specific IT-System values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderFullItSystemRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RightsHolderItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v2/rightsholder/it-systems/{uuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns requested IT-System",
        "operationId": "get_Single_ItSystemV2_GetItSystemByRightsHoldersAccess",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Sets IT-System values\r\nIf a property value is not provided, KITOS will fallback to the default value of the type and that will be written to the it-system so remember to define all data specified in the request DTO want them to have a value after the request.\r\nRequired properties dictate the minimum value set accepted by KITOS.\r\nNOTE: Only active systems can be modified.",
        "operationId": "put_Single_ItSystemV2_PutItSystemAsRightsHolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderFullItSystemRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Deactivates an IT-System",
        "operationId": "delete_Single_ItSystemV2_DeactivateSystemAsRightsHolder",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Reason for deactivation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivationReasonRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Partially updates an existing it-system using json merge patch semantics (RFC7396)\r\nNOTE: Only active systems can be modified.",
        "operationId": "patch_Single_ItSystemV2_PatchItSystemAsRightsHolder",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Specific IT-System UUID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RightsHolderUpdateSystemPropertiesRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RightsHolderItSystemResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-systems/{systemUuid}/permissions": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns the permissions of the authenticated client in the context of a specific IT-System",
        "operationId": "get_Single_ItSystemV2_GetItSystemPermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUuid",
            "in": "path",
            "description": "UUID of the system entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemPermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-systems/permissions": {
      "get": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Returns the permissions of the authenticated client for the IT-System resources collection in the context of an organization (IT-System permissions in a specific Organization)",
        "operationId": "get_Single_ItSystemV2_GetItSystemCollectionPermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceCollectionPermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-systems/{uuid}/external-references": {
      "post": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Creates an external reference for the system",
        "operationId": "post_Single_ItSystemV2_PostExternalReference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-systems/{uuid}/external-references/{externalReferenceUuid}": {
      "put": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Updates a system external reference",
        "operationId": "put_Single_ItSystemV2_PutExternalReference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "externalReferenceUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystem "
        ],
        "summary": "Deletes a system external reference",
        "operationId": "delete_Single_ItSystemV2_DeleteExternalReference",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "externalReferenceUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/business-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemBusinessType "
        ],
        "summary": "Returns IT-System business types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemBusinessTypeV2_GetBusinessTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the business type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/business-types/{businessTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemBusinessType "
        ],
        "summary": "Returns requested IT-System business type",
        "operationId": "get_Single_ItSystemBusinessTypeV2_GetBusinessType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "businessTypeUuid",
            "in": "path",
            "description": "business type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the business type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Returns all IT-System usages available to the current user",
        "operationId": "get_Many_ItSystemUsageV2_GetItSystemUsages",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "Query usages within a specific organization",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "relatedToSystemUuid",
            "in": "query",
            "description": "Query by systems with outgoing relations related to another system",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "relatedToSystemUsageUuid",
            "in": "query",
            "description": "Query by system usages with outgoing relations to a specific system usage (more narrow search than using system id)",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "relatedToContractUuid",
            "in": "query",
            "description": "Query by contracts which are part of a system relation",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemUuid",
            "in": "query",
            "description": "Query usages of a specific system",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemNameContent",
            "in": "query",
            "description": "Query usages based on system name",
            "required": false,
            "type": "string"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItSystemUsageResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Creates an IT-System usage",
        "operationId": "post_Single_ItSystemUsageV2_PostItSystemUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateItSystemUsageRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Another system usage has already been created for the system within the specified organization"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Returns a specific IT-System usage (a specific IT-System in a specific Organization)",
        "operationId": "get_Single_ItSystemUsageV2_GetItSystemUsage",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "UUID of the system usage entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Perform a full update of an existing system usage.\r\nNote: PUT expects a full version of the system usage. For partial updates, please use PATCH.",
        "operationId": "put_Single_ItSystemUsageV2_PutSystemUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItSystemUsageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Deletes a system usage.\r\nNOTE: this action also clears any incoming relation e.g. relations from other system usages, contracts or data processing registrations.",
        "operationId": "delete_Single_ItSystemUsageV2_DeleteItSystemUsage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Allows partial updates of an existing system usage\r\nNOTE:At the root level, defined sections will be mapped as changes e.g. {General: null} will reset the entire \"General\" section.\r\nIf the section is not provided in the json, the omitted section will remain unchanged.\r\nAt the moment we only manage PATCH at the root level so all levels below that must be provided in it's entirety.",
        "operationId": "patch_Single_ItSystemUsageV2_PatchSystemUsage",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItSystemUsageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/permissions": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Returns the permissions of the authenticated client in the context of a specific IT-System usage (a specific IT-System in a specific Organization)",
        "operationId": "get_Single_ItSystemUsageV2_GetItSystemUsagePermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "UUID of the system usage entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourcePermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/permissions": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Returns the permissions of the authenticated client for the IT-System usage resources collection in the context of an organization (IT-System usage permissions in a specific Organization)",
        "operationId": "get_Single_ItSystemUsageV2_GetItSystemUsageCollectionPermissions",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceCollectionPermissionsResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/incoming-system-relations": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Get all system relations TO the system usage FROM another system usage",
        "operationId": "get_Many_ItSystemUsageV2_GetIncomingSystemRelations",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingSystemRelationResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/roles/add": {
      "patch": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "operationId": "patch_Single_ItSystemUsageV2_PatchAddRoleAssignment",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "If duplicate is detected"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/roles/remove": {
      "patch": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Remove an existing role assignment to the it-system usage",
        "operationId": "patch_Single_ItSystemUsageV2_PatchRemoveRoleAssignment",
        "consumes": [
          "application/merge-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItSystemUsageResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/system-relations": {
      "post": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Creates a system relation FROM the system usage to another",
        "operationId": "post_Single_ItSystemUsageV2_PostSystemUsageRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemRelationWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OutgoingSystemRelationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/system-relations/{systemRelationUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Gets a specific relation FROM the system usage to another",
        "operationId": "get_Single_ItSystemUsageV2_GetSystemUsageRelation",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemRelationUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutgoingSystemRelationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Updates the system relation FROM the system usage to another",
        "operationId": "put_Single_ItSystemUsageV2_PutSystemUsageRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemRelationUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemRelationWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutgoingSystemRelationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Deletes a system relation FROM the system usage to another",
        "operationId": "delete_Single_ItSystemUsageV2_DeleteSystemUsageRelation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "systemRelationUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/external-references": {
      "post": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Creates an external reference for the system usage",
        "operationId": "post_Single_ItSystemUsageV2_PostExternalReference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/external-references/{externalReferenceUuid}": {
      "put": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Updates a system usage external reference",
        "operationId": "put_Single_ItSystemUsageV2_PutExternalReference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "externalReferenceUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Deletes a system usage external reference",
        "operationId": "delete_Single_ItSystemUsageV2_DeleteExternalReference",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "externalReferenceUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/journal-periods": {
      "post": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Add a single journal period to the system usage",
        "operationId": "post_Single_ItSystemUsageV2_PostJournalPeriod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalPeriodDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JournalPeriodResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usages/{systemUsageUuid}/journal-periods/{journalPeriodUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Get a specific journal period",
        "operationId": "get_Single_ItSystemUsageV2_GetJournalPeriod",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "journalPeriodUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalPeriodResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Perform a FULL update of an existing journal period",
        "operationId": "put_Single_ItSystemUsageV2_PutJournalPeriod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "journalPeriodUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalPeriodDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalPeriodResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "API V2 - ItSystemUsage "
        ],
        "summary": "Delete an existing journal period",
        "operationId": "delete_Single_ItSystemUsageV2_DeleteJournalPeriod",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "systemUsageUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "journalPeriodUuid",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-location-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveLocationType "
        ],
        "summary": "Returns It-System Usage archive location options which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageArchiveLocationTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive locations availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-location-types/{archiveLocationUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveLocationType "
        ],
        "summary": "Returns requested It-System Usage archive location",
        "operationId": "get_Single_ItSystemUsageArchiveLocationTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "archiveLocationUuid",
            "in": "path",
            "description": "archive location identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive location availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-test-location-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveTestLocationType "
        ],
        "summary": "Returns It-System Usage archive test location options which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageArchiveTestLocationTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive test locations availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-test-location-types/{archiveTestLocationUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveTestLocationType "
        ],
        "summary": "Returns requested It-System Usage archive test location",
        "operationId": "get_Single_ItSystemUsageArchiveTestLocationTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "archiveTestLocationUuid",
            "in": "path",
            "description": "archive test location identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive test location availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveType "
        ],
        "summary": "Returns It-System Usage archive option types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageArchiveTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archivetype availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-archive-types/{archiveTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageArchiveType "
        ],
        "summary": "Returns requested It-System Usage archive option type",
        "operationId": "get_Single_ItSystemUsageArchiveTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "archiveTypeUuid",
            "in": "path",
            "description": "archive type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the archive type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-data-classification-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageDataClassificationType "
        ],
        "summary": "Returns IT-System usage data classification option types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageDataClassificationTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the data classification type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-data-classification-types/{dataClassificationTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageDataClassificationType "
        ],
        "summary": "Returns requested IT-System usage data classification option type",
        "operationId": "get_Single_ItSystemUsageDataClassificationTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataClassificationTypeUuid",
            "in": "path",
            "description": "data classification type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the data classification type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-registered-data-category-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRegisteredDataCategoryType "
        ],
        "summary": "Returns It-System Usage registered data category types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageRegisteredDataCategoryTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-registered-data-category-types/{registeredDataCatagoryTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRegisteredDataCategoryType "
        ],
        "summary": "Returns requested It-System Usage registered data category type",
        "operationId": "get_Single_ItSystemUsageRegisteredDataCategoryTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registeredDataCatagoryTypeUuid",
            "in": "path",
            "description": "register type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-relation-frequency-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRelationFrequencyType "
        ],
        "summary": "Returns IT-System usage relation frequency option types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageRelationFrequencyTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the relation frequency type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-relation-frequency-types/{relationFrequencyTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRelationFrequencyType "
        ],
        "summary": "Returns requested IT-System usage relation frequency option type",
        "operationId": "get_Single_ItSystemUsageRelationFrequencyTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relationFrequencyTypeUuid",
            "in": "path",
            "description": "relation frequency type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the relation frequency type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-role-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRoleType "
        ],
        "summary": "Returns IT-System usage role types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageRoleTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the IT-System usage role availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-role-types/{systemUsageRoleTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageRoleType "
        ],
        "summary": "Returns requested IT-System usage role type",
        "operationId": "get_Single_ItSystemUsageRoleTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "systemUsageRoleTypeUuid",
            "in": "path",
            "description": "role type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the role type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-sensitive-personal-data-types": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageSensitivePersonalDataType "
        ],
        "summary": "Returns It-System usage sensitive personal data types which are available for new registrations within the organization",
        "operationId": "get_Many_ItSystemUsageSensitivePersonalDataTypeV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the sensitive personal data types availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegularOptionResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/it-system-usage-sensitive-personal-data-types/{sensitivePersonalDataTypeUuid}": {
      "get": {
        "tags": [
          "API V2 - ItSystemUsageSensitivePersonalDataType "
        ],
        "summary": "Returns requested It-System usage sensitive personal data type",
        "operationId": "get_Single_ItSystemUsageSensitivePersonalDataTypeV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sensitivePersonalDataTypeUuid",
            "in": "path",
            "description": "sensitive personal data type identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "organization context for the sensitive personal data type availability",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegularOptionExtendedResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/kle-options": {
      "get": {
        "tags": [
          "API V2 - KleOption "
        ],
        "summary": "Returns the KLE reference used by KITOS",
        "operationId": "get_Single_KleOptionV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentKleUuid",
            "in": "query",
            "description": "Query by parent KLE uuid",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "parentKleNumber",
            "in": "query",
            "description": "Query by parent KLE number (exact match)",
            "required": false,
            "type": "string"
          },
          {
            "name": "kleNumberPrefix",
            "in": "query",
            "description": "Query by KLE number prefix",
            "required": false,
            "type": "string"
          },
          {
            "name": "kleDescriptionContent",
            "in": "query",
            "description": "Query by KLE description content",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0\r\nNOTE: This parameter has no effect if 'pageSize' is left unspecified",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,2^31] Default: null.\r\nIf left unspecified, the entire result set will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KLEDetailsDTOIEnumerableVersionedKLEResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v2/kle-options/{kleUuid}": {
      "get": {
        "tags": [
          "API V2 - KleOption "
        ],
        "summary": "Returns the details of a single KLE",
        "operationId": "get_Single_KleOptionV2_Get_V1",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "kleUuid",
            "in": "path",
            "description": "UUID of the KLE number",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KLEDetailsDTOVersionedKLEResponseDTO"
            }
          },
          "400": {
            "description": "kleUuid is invalid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/organizations": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns organizations organizations from KITOS",
        "operationId": "get_Many_OrganizationV2_GetOrganizations",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "onlyWhereUserHasMembership",
            "in": "query",
            "description": "If set to true, only organizations where the user has access and/or role(s) will be included.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nameContent",
            "in": "query",
            "description": "Optional query for name content",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvrContent",
            "in": "query",
            "description": "Optional query on CVR number",
            "required": false,
            "type": "string"
          },
          {
            "name": "nameOrCvrContent",
            "in": "query",
            "description": "Optional query which will query both name and CVR number using OR logic",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "Optional query by organization uuid",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v2/organizations/{organizationUuid}": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns organization identified by uuid",
        "operationId": "get_Single_OrganizationV2_GetOrganization",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "path",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/organizations/{organizationUuid}/users": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns the users of an organization if the authenticated user is a member of the organization.",
        "operationId": "get_Many_OrganizationV2_GetOrganizationUsers",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "path",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameOrEmailQuery",
            "in": "query",
            "description": "Query by text in name or email",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleQuery",
            "in": "query",
            "description": "Query by role assignment",
            "required": false,
            "type": "string",
            "enum": [
              "User",
              "LocalAdmin",
              "OrganizationModuleAdmin",
              "SystemModuleAdmin",
              "ContractModuleAdmin",
              "RightsHolderAccess"
            ]
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Property to order by",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationUserResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Organization provided does not exist"
          }
        }
      }
    },
    "/api/v2/organizations/{organizationUuid}/users/{userUuid}": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns the a specific user within an organization",
        "operationId": "get_Single_OrganizationV2_GetOrganizationUser",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "path",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userUuid",
            "in": "path",
            "description": "UUID of the user entity in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationUserResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/organizations/{organizationUuid}/organization-units": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns the organization units of an organization if the authenticated user is a member of the organization.",
        "operationId": "get_Many_OrganizationV2_GetOrganizationUnits",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "path",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameQuery",
            "in": "query",
            "description": "Query by text in name",
            "required": false,
            "type": "string"
          },
          {
            "name": "changedSinceGtEq",
            "in": "query",
            "description": "Include only changes which were LastModified (UTC) is equal to or greater than the provided value",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderByProperty",
            "in": "query",
            "description": "Ordering property",
            "required": false,
            "type": "string",
            "enum": [
              "CreationOrder",
              "Name",
              "LastChanged"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationUnitResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Organization provided does not exist"
          }
        }
      }
    },
    "/api/v2/organizations/{organizationUuid}/organization-units/{organizationUnitId}": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns the a specific organization unit inside an organization",
        "operationId": "get_Single_OrganizationV2_GetOrganizationUnit",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationUuid",
            "in": "path",
            "description": "UUID of the organization",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizationUnitId",
            "in": "path",
            "description": "UUID of the organization unit in KITOS",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationUnitResponseDTO"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v2/rightsholder/organizations": {
      "get": {
        "tags": [
          "API V2 - Organization "
        ],
        "summary": "Returns organizations in which the current user has \"RightsHolderAccess\" permission",
        "operationId": "get_Many_OrganizationV2_GetOrganizationsAsRightsHolder",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number. Use this parameter to page through the requested collection.\r\nOffset in the source collection will be (pageSize * page)\r\nRange: [0,2^31] Default: 0",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page referred by 'page'.\r\nRange: [1,250] Default: 250.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 250,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShallowOrganizationResponseDTO"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "DataProcessingRegistrationResponseDTO": {
      "required": [
        "name",
        "uuid",
        "createdBy",
        "lastModified",
        "lastModifiedBy",
        "organizationContext",
        "general",
        "systemUsages",
        "oversight",
        "roles",
        "externalReferences"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO"
        },
        "lastModified": {
          "format": "date-time",
          "description": "UTC timestamp of latest modification",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO"
        },
        "organizationContext": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO"
        },
        "general": {
          "$ref": "#/definitions/DataProcessingRegistrationGeneralDataResponseDTO"
        },
        "systemUsages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "oversight": {
          "$ref": "#/definitions/DataProcessingRegistrationOversightResponseDTO"
        },
        "roles": {
          "description": "Data processing role assignments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResponseDTO"
          }
        },
        "externalReferences": {
          "description": "External reference definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
          }
        }
      }
    },
    "IdentityNamePairResponseDTO": {
      "required": [
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "ShallowOrganizationResponseDTO": {
      "required": [
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "cvr": {
          "description": "Organizational CVR identifier, if any",
          "type": "string",
          "readOnly": true
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "DataProcessingRegistrationGeneralDataResponseDTO": {
      "required": [
        "insecureCountriesSubjectToDataTransfer",
        "dataProcessors",
        "subDataProcessors",
        "valid"
      ],
      "type": "object",
      "properties": {
        "dataResponsible": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional data responsible selection"
        },
        "dataResponsibleRemark": {
          "description": "Additional remark related to the data responsible",
          "type": "string"
        },
        "isAgreementConcluded": {
          "description": "Determines if a data processing agreement has been concluded",
          "enum": [
            "No",
            "Yes",
            "Irrelevant",
            "Undecided"
          ],
          "type": "string"
        },
        "isAgreementConcludedRemark": {
          "description": "Remark related to whether or not an agreement has been concluded",
          "type": "string"
        },
        "agreementConcludedAt": {
          "format": "date-time",
          "description": "Describes the date when the data processing agreement was concluded",
          "type": "string"
        },
        "basisForTransfer": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional basis for transfer selection"
        },
        "transferToInsecureThirdCountries": {
          "description": "Determines if the data processing includes transfer to insecure third countries",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "insecureCountriesSubjectToDataTransfer": {
          "description": "Which insecure third countries are subject to data transfer as part of the data processing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "dataProcessors": {
          "description": "UUID's of the organization entities selected as data processors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowOrganizationResponseDTO"
          }
        },
        "hasSubDataProcessors": {
          "description": "Determines if the data processing involves sub data processors",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "subDataProcessors": {
          "description": "UUID's of the organization entities selected as sub data processors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataProcessorRegistrationSubDataProcessorResponseDTO"
          }
        },
        "valid": {
          "description": "Determines if the entity is considered valid. Validity is determined by\r\n- the MainContract Validity.",
          "type": "boolean"
        },
        "mainContract": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Defines the master contract for this data processing registration (many contracts can point to a data processing registration but only one can be the master contract)"
        }
      }
    },
    "DataProcessingRegistrationOversightResponseDTO": {
      "required": [
        "oversightOptions",
        "oversightDates"
      ],
      "type": "object",
      "properties": {
        "oversightOptions": {
          "description": "Applied oversight options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "oversightOptionsRemark": {
          "description": "Remark related to the selected oversight options",
          "type": "string"
        },
        "oversightInterval": {
          "description": "Determines the interval of the oversight activity",
          "enum": [
            "BiYearly",
            "Yearly",
            "EveryOtherYear",
            "Other",
            "Undecided"
          ],
          "type": "string"
        },
        "oversightIntervalRemark": {
          "description": "Remark regarding the oversight interval",
          "type": "string"
        },
        "isOversightCompleted": {
          "description": "Determines if an oversight activity has been completed",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "oversightCompletedRemark": {
          "description": "Remark related to the oversight completion",
          "type": "string"
        },
        "oversightScheduledInspectionDate": {
          "format": "date-time",
          "description": "Determines the date of a scheduled inspection",
          "type": "string"
        },
        "oversightDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OversightDateDTO"
          }
        }
      }
    },
    "RoleAssignmentResponseDTO": {
      "description": "Defines a generic assignment DTO representing the assignment of a role option to a KITOS User",
      "required": [
        "user",
        "role"
      ],
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "KITOS user which the role has been assigned to"
        },
        "role": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Specific role option assigned to the user."
        }
      }
    },
    "ExternalReferenceDataResponseDTO": {
      "required": [
        "title",
        "masterReference"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "title": {
          "description": "Reference title as shown in KITOS UI",
          "type": "string"
        },
        "documentId": {
          "description": "Document ID/Case number",
          "type": "string"
        },
        "url": {
          "description": "URL e.g. data sheet or other supplier related url.\r\nAlso accepts ESDH system url's following the pattern: (kmdsageraabn|kmdedhvis|sbsyslauncher):.*",
          "type": "string"
        },
        "masterReference": {
          "description": "Determines if this is the master reference for the KITOS entity\r\nConstraint: Only one external reference can be marked as the master reference",
          "type": "boolean"
        }
      }
    },
    "DataProcessorRegistrationSubDataProcessorResponseDTO": {
      "required": [
        "dataProcessorOrganization"
      ],
      "type": "object",
      "properties": {
        "dataProcessorOrganization": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "The data processor's organization in KITOS"
        },
        "basisForTransfer": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional reference to selected basis for transfer option"
        },
        "transferToInsecureThirdCountry": {
          "description": "Optionally info regarding whether transfer to insecure third countries occur",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "insecureThirdCountrySubjectToDataProcessing": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional reference to a specific insecure country, which is subject to data processing"
        }
      }
    },
    "OversightDateDTO": {
      "required": [
        "completedAt"
      ],
      "type": "object",
      "properties": {
        "completedAt": {
          "format": "date-time",
          "description": "Date of oversight completion",
          "type": "string"
        },
        "remark": {
          "description": "Optional remark related to the oversight",
          "type": "string"
        }
      }
    },
    "CreateDataProcessingRegistrationRequestDTO": {
      "required": [
        "organizationUuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "organizationUuid": {
          "format": "uuid",
          "description": "UUID of the organization the data processing registration will be created in",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of the registration\r\nConstraints:\r\n    - Max length: 200\r\n    - Name must be unique within the organization",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraint:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
          }
        },
        "general": {
          "$ref": "#/definitions/DataProcessingRegistrationGeneralDataWriteRequestDTO"
        },
        "systemUsageUuids": {
          "description": "UUIDs of associated it-system-usage entities\r\nConstraints:\r\n    - No duplicates\r\n    - System usages must be belong to the same organization as this data processing registration",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "oversight": {
          "$ref": "#/definitions/DataProcessingRegistrationOversightWriteRequestDTO"
        },
        "roles": {
          "description": "Data processing role assignments\r\nConstraints:\r\n    - Users must be members of the same organization as this data processing registration\r\n    - Role options must be available in the organization of the data processing registration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        }
      }
    },
    "ExternalReferenceDataWriteRequestDTO": {
      "description": "User defined external references attached to a KITOS entity",
      "required": [
        "title",
        "masterReference"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Reference title as shown in KITOS UI",
          "type": "string"
        },
        "documentId": {
          "description": "Document ID/Case number",
          "type": "string"
        },
        "url": {
          "description": "URL e.g. data sheet or other supplier related url.\r\nAlso accepts ESDH system url's following the pattern: (kmdsageraabn|kmdedhvis|sbsyslauncher):.*",
          "type": "string"
        },
        "masterReference": {
          "description": "Determines if this is the master reference for the KITOS entity\r\nConstraint: Only one external reference can be marked as the master reference",
          "type": "boolean"
        }
      }
    },
    "DataProcessingRegistrationGeneralDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "dataResponsibleUuid": {
          "format": "uuid",
          "description": "Optional data responsible selection\r\nConstraints:\r\n    - If changed from existing value, the option must currently be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "dataResponsibleRemark": {
          "description": "Additional remark related to the data responsible",
          "type": "string"
        },
        "isAgreementConcluded": {
          "description": "Determines if a data processing agreement has been concluded",
          "enum": [
            "No",
            "Yes",
            "Irrelevant",
            "Undecided"
          ],
          "type": "string"
        },
        "isAgreementConcludedRemark": {
          "description": "Remark related to whether or not an agreement has been concluded",
          "type": "string"
        },
        "agreementConcludedAt": {
          "format": "date-time",
          "description": "Describes the date when the data processing agreement was concluded\r\nConstraints:\r\n    - IsAgreementConcluded equals 'yes'",
          "type": "string"
        },
        "basisForTransferUuid": {
          "format": "uuid",
          "description": "Optional basis for transfer selection\r\nConstraints:\r\n    - If changed from existing value, the option must currently be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "transferToInsecureThirdCountries": {
          "description": "Determines if the data processing includes transfer to insecure third countries",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "insecureCountriesSubjectToDataTransferUuids": {
          "description": "Which insecure third countries are subject to data transfer as part of the data processing\r\nConstraints:\r\n    - TransferToInsecureThirdCountries equals 'yes'\r\n    - Duplicates are not allowed\r\n    - If changed from existing value, the options must currently be available in the organization",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "dataProcessorUuids": {
          "description": "UUID's of the organization entities selected as data processors\r\nConstraints:\r\n    - No duplicates",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "hasSubDataProcessors": {
          "description": "Determines if the data processing involves sub data processors",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "subDataProcessors": {
          "description": "Sub data processors\r\nConstraints:\r\n    - HasSubDataProcesors equals 'yes'\r\n    - No duplicates allowed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataProcessorRegistrationSubDataProcessorWriteRequestDTO"
          }
        },
        "mainContractUuid": {
          "format": "uuid",
          "description": "Defines the master contract for this Data Processing Registration (many contracts can point to a DPR but only one can be the master contract)\r\nConstraint: The contract provided MUST point to this Data Processing Registration for it to be selected as \"main contract\".",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DataProcessingRegistrationOversightWriteRequestDTO": {
      "type": "object",
      "properties": {
        "oversightOptionUuids": {
          "description": "Applied oversight options.\r\nConstraints:\r\n    - No duplicates\r\n    - Option must be available in the organization",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "oversightOptionsRemark": {
          "description": "Remark related to the selected oversight options",
          "type": "string"
        },
        "oversightInterval": {
          "description": "Determines the interval of the oversight activity",
          "enum": [
            "BiYearly",
            "Yearly",
            "EveryOtherYear",
            "Other",
            "Undecided"
          ],
          "type": "string"
        },
        "oversightIntervalRemark": {
          "description": "Remark regarding the oversight interval",
          "type": "string"
        },
        "isOversightCompleted": {
          "description": "Determines if an oversight activity has been completed",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "oversightCompletedRemark": {
          "description": "Remark related to the oversight completion",
          "type": "string"
        },
        "oversightScheduledInspectionDate": {
          "format": "date-time",
          "description": "Determines the date of a scheduled inspection",
          "type": "string"
        },
        "oversightDates": {
          "description": "Specific dates where the oversight activity took place\r\nConstraints:\r\n    - IsOversightCompleted equals yes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OversightDateDTO"
          }
        }
      }
    },
    "RoleAssignmentRequestDTO": {
      "required": [
        "roleUuid",
        "userUuid"
      ],
      "type": "object",
      "properties": {
        "roleUuid": {
          "format": "uuid",
          "description": "UUID of the role option\r\nConstraints:\r\n    - Role must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "userUuid": {
          "format": "uuid",
          "description": "UUID of the user\r\nConstraints:\r\n    - User must be a member of the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DataProcessorRegistrationSubDataProcessorWriteRequestDTO": {
      "required": [
        "dataProcessorOrganizationUuid"
      ],
      "type": "object",
      "properties": {
        "dataProcessorOrganizationUuid": {
          "format": "uuid",
          "description": "The UUID of the data processor's organization in KITOS",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "basisForTransferUuid": {
          "format": "uuid",
          "description": "Optional reference to the uuid of the selected basis for transfer option",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "transferToInsecureThirdCountry": {
          "description": "Optional info regarding whether transfer to insecure third countries occur",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        },
        "insecureThirdCountrySubjectToDataProcessingUuid": {
          "format": "uuid",
          "description": "Optional reference to the uuid a specific insecure country, which is subject to data processing",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "UpdateDataProcessingRegistrationRequestDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the registration\r\nConstraints:\r\n    - Max length: 200\r\n    - Name must be unique within the organization",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateExternalReferenceDataWriteRequestDTO"
          }
        },
        "general": {
          "$ref": "#/definitions/DataProcessingRegistrationGeneralDataWriteRequestDTO"
        },
        "systemUsageUuids": {
          "description": "UUIDs of associated it-system-usage entities\r\nConstraints:\r\n    - No duplicates\r\n    - System usages must be belong to the same organization as this data processing registration",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "oversight": {
          "$ref": "#/definitions/DataProcessingRegistrationOversightWriteRequestDTO"
        },
        "roles": {
          "description": "Data processing role assignments\r\nConstraints:\r\n    - Users must be members of the same organization as this data processing registration\r\n    - Role options must be available in the organization of the data processing registration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        }
      }
    },
    "UpdateExternalReferenceDataWriteRequestDTO": {
      "required": [
        "title",
        "masterReference"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "The UUID of the External Reference\r\nConstrains:\r\n    - If the reference has a uuid it the update points to an existing reference (with the same uuid).\r\n    - If the reference has no uuid, it will be considered anonymous and be added as such (and KITOS will assign a uuid to it automatically)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "title": {
          "description": "Reference title as shown in KITOS UI",
          "type": "string"
        },
        "documentId": {
          "description": "Document ID/Case number",
          "type": "string"
        },
        "url": {
          "description": "URL e.g. data sheet or other supplier related url.\r\nAlso accepts ESDH system url's following the pattern: (kmdsageraabn|kmdedhvis|sbsyslauncher):.*",
          "type": "string"
        },
        "masterReference": {
          "description": "Determines if this is the master reference for the KITOS entity\r\nConstraint: Only one external reference can be marked as the master reference",
          "type": "boolean"
        }
      }
    },
    "RegularOptionResponseDTO": {
      "required": [
        "description",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Extended description of the choice",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "RegularOptionExtendedResponseDTO": {
      "required": [
        "description",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "isAvailable": {
          "description": "IsAvailable is set to true if the type is available in the requested organization context.\r\nIf set to false, changes which point to this will fail since it has been deprecated within the organization.\r\nExisting registrations will be unaffected.",
          "type": "boolean"
        },
        "description": {
          "description": "Extended description of the choice",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "RoleOptionResponseDTO": {
      "required": [
        "description",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "writeAccess": {
          "description": "Determines if this role grants write access to the entity through which it has been created",
          "type": "boolean"
        },
        "description": {
          "description": "Extended description of the choice",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "RoleOptionExtendedResponseDTO": {
      "required": [
        "description",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "isAvailable": {
          "description": "IsAvailable is set to true if the type is available in the requested organization context.\r\nIf set to false, changes which point to this will fail since it has been deprecated within the organization.\r\nExisting registrations will be unaffected.",
          "type": "boolean"
        },
        "writeAccess": {
          "description": "Determines if this role grants write access to the entity through which it has been created",
          "type": "boolean"
        },
        "description": {
          "description": "Extended description of the choice",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "TrackingEventResponseDTO": {
      "required": [
        "occurredAtUtc",
        "entityUuid",
        "entityType"
      ],
      "type": "object",
      "properties": {
        "occurredAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "entityUuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "entityType": {
          "enum": [
            "ItSystem",
            "ItSystemUsage",
            "ItInterface",
            "ItContract",
            "DataProcessingRegistration",
            "OrganizationUnit"
          ],
          "type": "string"
        }
      }
    },
    "ItContractResponseDTO": {
      "required": [
        "uuid",
        "name",
        "organizationContext",
        "lastModified",
        "lastModifiedBy",
        "createdBy",
        "general",
        "procurement",
        "supplier",
        "responsible",
        "systemUsages",
        "dataProcessingRegistrations",
        "paymentModel",
        "agreementPeriod",
        "termination",
        "payments",
        "roles",
        "externalReferences"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-Contract",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-Contract",
          "type": "string"
        },
        "organizationContext": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organization in which the contract was created"
        },
        "lastModified": {
          "format": "date-time",
          "description": "UTC timestamp of latest modification",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Reference to the user who last modified the contract"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Reference to the user who created the contract"
        },
        "parentContract": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional parent contract"
        },
        "general": {
          "$ref": "#/definitions/ContractGeneralDataResponseDTO"
        },
        "procurement": {
          "$ref": "#/definitions/ContractProcurementDataResponseDTO"
        },
        "supplier": {
          "$ref": "#/definitions/ContractSupplierDataResponseDTO"
        },
        "responsible": {
          "$ref": "#/definitions/ContractResponsibleDataResponseDTO"
        },
        "systemUsages": {
          "description": "Associated IT-System usages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "dataProcessingRegistrations": {
          "description": "Data processing registrations associated with this it-contract",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "paymentModel": {
          "$ref": "#/definitions/ContractPaymentModelDataResponseDTO"
        },
        "agreementPeriod": {
          "$ref": "#/definitions/ContractAgreementPeriodDataResponseDTO"
        },
        "termination": {
          "$ref": "#/definitions/ContractTerminationDataResponseDTO"
        },
        "payments": {
          "$ref": "#/definitions/ContractPaymentsDataResponseDTO"
        },
        "roles": {
          "description": "Role assignments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResponseDTO"
          }
        },
        "externalReferences": {
          "description": "External reference definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
          }
        }
      }
    },
    "ContractGeneralDataResponseDTO": {
      "required": [
        "agreementElements",
        "validity"
      ],
      "type": "object",
      "properties": {
        "contractId": {
          "description": "User-assigned contract id",
          "type": "string"
        },
        "contractType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned contract type"
        },
        "contractTemplate": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned contract template"
        },
        "agreementElements": {
          "description": "Optionally assigned agreement elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "notes": {
          "type": "string"
        },
        "validity": {
          "$ref": "#/definitions/ContractValidityResponseDTO",
          "description": "Validity of the it-contract"
        },
        "criticality": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned criticality"
        }
      }
    },
    "ContractProcurementDataResponseDTO": {
      "type": "object",
      "properties": {
        "purchaseType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned purchase type"
        },
        "procurementStrategy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned procurement strategy"
        },
        "procurementPlan": {
          "$ref": "#/definitions/ProcurementPlanDTO",
          "description": "Procurement plan"
        },
        "procurementInitiated": {
          "description": "Procurement Initiated for IT-Contract. (Genanskaffelse igangsat)",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        }
      }
    },
    "ContractSupplierDataResponseDTO": {
      "required": [
        "signed"
      ],
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Optional reference to the supplier organization"
        },
        "signed": {
          "description": "Determines if the contract has been signed by the supplier",
          "type": "boolean"
        },
        "signedBy": {
          "description": "Who, at the supplier, signed the contract",
          "type": "string"
        },
        "signedAt": {
          "format": "date-time",
          "description": "Which date was the contract signed by the supplier",
          "type": "string"
        }
      }
    },
    "ContractResponsibleDataResponseDTO": {
      "required": [
        "signed"
      ],
      "type": "object",
      "properties": {
        "organizationUnit": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional reference responsible organization unit"
        },
        "signed": {
          "description": "Determines if the contract has been signed",
          "type": "boolean"
        },
        "signedBy": {
          "description": "Who, in the organization, signed the contract",
          "type": "string"
        },
        "signedAt": {
          "format": "date-time",
          "description": "Which date was the contract signed",
          "type": "string"
        }
      }
    },
    "ContractPaymentModelDataResponseDTO": {
      "type": "object",
      "properties": {
        "operationsRemunerationStartedAt": {
          "format": "date-time",
          "description": "The data at which operations remuneration started",
          "type": "string"
        },
        "paymentFrequency": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned payment frequency"
        },
        "paymentModel": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned payment model"
        },
        "priceRegulation": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned price regulation"
        }
      }
    },
    "ContractAgreementPeriodDataResponseDTO": {
      "required": [
        "extensionOptionsUsed"
      ],
      "type": "object",
      "properties": {
        "durationYears": {
          "format": "int32",
          "description": "If the agreement has a fixed duration, optionally define the years + months for which it is valid",
          "type": "integer"
        },
        "durationMonths": {
          "format": "int32",
          "description": "If the agreement has a fixed duration, optionally define the years + months for which it is valid",
          "type": "integer"
        },
        "isContinuous": {
          "description": "Determines if the agreement has no fixed duration",
          "type": "boolean"
        },
        "extensionOptions": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional agreement extension option"
        },
        "extensionOptionsUsed": {
          "format": "int32",
          "description": "Determines how many of the agreement available extension options that have been used",
          "type": "integer"
        },
        "irrevocableUntil": {
          "format": "date-time",
          "description": "The agreement cannot be revoked before this date",
          "type": "string"
        }
      }
    },
    "ContractTerminationDataResponseDTO": {
      "type": "object",
      "properties": {
        "terminatedAt": {
          "format": "date-time",
          "description": "The date at which the contract was terminated",
          "type": "string"
        },
        "terms": {
          "$ref": "#/definitions/ContractTerminationTermsResponseDTO",
          "description": "Contract termination terms"
        }
      }
    },
    "ContractPaymentsDataResponseDTO": {
      "required": [
        "external",
        "internal"
      ],
      "type": "object",
      "properties": {
        "external": {
          "description": "External payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentResponseDTO"
          }
        },
        "internal": {
          "description": "Internal payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentResponseDTO"
          }
        }
      }
    },
    "ContractValidityResponseDTO": {
      "required": [
        "valid",
        "enforcedValid"
      ],
      "type": "object",
      "properties": {
        "valid": {
          "description": "Determines if the entity is considered valid. This is computed from both \"EnforcedValid\" as well as ValidAccordingToValidityPeriod.",
          "type": "boolean"
        },
        "enforcedValid": {
          "description": "Determines if this entity has been forced into valid state even if context properties would dictate otherwise (e.g. no longer in use)",
          "type": "boolean"
        },
        "validFrom": {
          "format": "date-time",
          "description": "If specified, the entity is valid from this date.",
          "type": "string"
        },
        "validTo": {
          "format": "date-time",
          "description": "If specified, the entity is valid up until and including this date.",
          "type": "string"
        }
      }
    },
    "ProcurementPlanDTO": {
      "required": [
        "quarterOfYear",
        "year"
      ],
      "type": "object",
      "properties": {
        "quarterOfYear": {
          "format": "int32",
          "description": "Which half of the year is the procurement plan for.\r\nRange:\r\n    - 1: First quarter of the year\r\n    - 2: Second quarter of the year\r\n    - 3: Third quarter of the year\r\n    - 4: Fourth quarter of the year",
          "maximum": 4,
          "minimum": 1,
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Which year the procurement plan is for",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "ContractTerminationTermsResponseDTO": {
      "type": "object",
      "properties": {
        "noticePeriodMonths": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally assigned notice period\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization"
        },
        "noticePeriodExtendsCurrent": {
          "description": "Elaborates the selection in NoticePeriod",
          "enum": [
            "EndOfCalendarYear",
            "EndOfQuarter",
            "EndOfMonth"
          ],
          "type": "string"
        },
        "noticeByEndOf": {
          "description": "Defines a fixed termination notice schema",
          "enum": [
            "EndOfCalendarYear",
            "EndOfQuarter",
            "EndOfMonth"
          ],
          "type": "string"
        }
      }
    },
    "PaymentResponseDTO": {
      "type": "object",
      "properties": {
        "organizationUnit": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optionally defined the organization unit responsible for the payment"
        },
        "acquisition": {
          "format": "int32",
          "description": "Part of payment which covers acquisition",
          "type": "integer"
        },
        "operation": {
          "format": "int32",
          "description": "Part of payment which covers operations",
          "type": "integer"
        },
        "other": {
          "format": "int32",
          "description": "Part of payment which is not classified as either operations or acquisition",
          "type": "integer"
        },
        "accountingEntry": {
          "type": "string"
        },
        "auditStatus": {
          "description": "The result of the specific payment audit",
          "enum": [
            "White",
            "Red",
            "Yellow",
            "Green"
          ],
          "type": "string"
        },
        "auditDate": {
          "format": "date-time",
          "description": "Defines the date at which the payment was audited",
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "CreateNewContractRequestDTO": {
      "required": [
        "organizationUuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "organizationUuid": {
          "format": "uuid",
          "description": "UUID of the organization in which the contract will be created",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of the contract.\r\nConstraints:\r\n    - Max length: 200 characters\r\n    - Must be unique within the organization",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
          }
        },
        "parentContractUuid": {
          "format": "uuid",
          "description": "UUID of the optional parent contract\r\nConstraints:\r\n    - Parent and child contract must belong to the same organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "general": {
          "$ref": "#/definitions/ContractGeneralDataWriteRequestDTO"
        },
        "procurement": {
          "$ref": "#/definitions/ContractProcurementDataWriteRequestDTO"
        },
        "supplier": {
          "$ref": "#/definitions/ContractSupplierDataWriteRequestDTO"
        },
        "responsible": {
          "$ref": "#/definitions/ContractResponsibleDataWriteRequestDTO"
        },
        "systemUsageUuids": {
          "description": "IT-System usages covered by this it-contract\r\nConstraints:\r\n    - System usages must belong to the same organization as the it-contract\r\n    - No duplicates",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "dataProcessingRegistrationUuids": {
          "description": "Data processing registrations associated with this it-contract\r\nConstraints:\r\n    - Must belong to the same organization as the it-contract\r\n    - No duplicates",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "paymentModel": {
          "$ref": "#/definitions/ContractPaymentModelDataWriteRequestDTO"
        },
        "agreementPeriod": {
          "$ref": "#/definitions/ContractAgreementPeriodDataWriteRequestDTO"
        },
        "termination": {
          "$ref": "#/definitions/ContractTerminationDataWriteRequestDTO"
        },
        "payments": {
          "$ref": "#/definitions/ContractPaymentsDataWriteRequestDTO"
        },
        "roles": {
          "description": "Role assignments\r\nConstraints:\r\n    - No duplicates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        }
      }
    },
    "ContractGeneralDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "contractId": {
          "description": "User-assigned contract id",
          "type": "string"
        },
        "contractTypeUuid": {
          "format": "uuid",
          "description": "Optionally assigned contract type\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "contractTemplateUuid": {
          "format": "uuid",
          "description": "Optionally assigned contract template\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "agreementElementUuids": {
          "description": "Optionally assigned agreement elements\r\nConstraints:\r\n    - If changed from current state, the option types must be available in the organization",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "notes": {
          "type": "string"
        },
        "validity": {
          "$ref": "#/definitions/ContractValidityWriteRequestDTO",
          "description": "Validity of the it-contract"
        },
        "criticalityUuid": {
          "format": "uuid",
          "description": "Optionally assigned criticality\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ContractProcurementDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "purchaseTypeUuid": {
          "format": "uuid",
          "description": "Optionally assigned purchase type\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "procurementStrategyUuid": {
          "format": "uuid",
          "description": "Optionally assigned procurement strategy\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "procurementPlan": {
          "$ref": "#/definitions/ProcurementPlanDTO",
          "description": "Procurement plan"
        },
        "procurementInitiated": {
          "description": "Repurchase Initiated for IT-Contract. (Genanskaffelse igangsat)",
          "enum": [
            "No",
            "Yes",
            "Undecided"
          ],
          "type": "string"
        }
      }
    },
    "ContractSupplierDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "organizationUuid": {
          "format": "uuid",
          "description": "Optional reference to the supplier organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "signed": {
          "description": "Determines if the contract has been signed by the supplier",
          "type": "boolean"
        },
        "signedBy": {
          "description": "Who, at the supplier, signed the contract",
          "type": "string"
        },
        "signedAt": {
          "format": "date-time",
          "description": "Which date was the contract signed by the supplier",
          "type": "string"
        }
      }
    },
    "ContractResponsibleDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "organizationUnitUuid": {
          "format": "uuid",
          "description": "Optional reference responsible organization unit\r\nConstraints:\r\n    - Must be a organization unit of the Organization to which the contract belongs",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "signed": {
          "description": "Determines if the contract has been signed",
          "type": "boolean"
        },
        "signedBy": {
          "description": "Who, in the organization, signed the contract",
          "type": "string"
        },
        "signedAt": {
          "format": "date-time",
          "description": "Which date was the contract signed",
          "type": "string"
        }
      }
    },
    "ContractPaymentModelDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "operationsRemunerationStartedAt": {
          "format": "date-time",
          "description": "The data at which operations remuneration started",
          "type": "string"
        },
        "paymentFrequencyUuid": {
          "format": "uuid",
          "description": "Optionally assigned payment frequency\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "paymentModelUuid": {
          "format": "uuid",
          "description": "Optionally assigned payment model\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "priceRegulationUuid": {
          "format": "uuid",
          "description": "Optionally assigned price regulation\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ContractAgreementPeriodDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "durationYears": {
          "format": "int32",
          "description": "If the agreement has a fixed duration, optionally define the years + months for which it is valid\r\nConstraints:\r\n    - If DurationMonths/Years are defined then IsContinuous must be null or false",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "durationMonths": {
          "format": "int32",
          "description": "If the agreement has a fixed duration, optionally define the years + months for which it is valid\r\nConstraints:\r\n    - If DurationMonths/Years are defined then IsContinuous must be null or false",
          "maximum": 11,
          "minimum": 0,
          "type": "integer"
        },
        "isContinuous": {
          "description": "Determines if the agreement has no fixed duration\r\nConstraints:\r\n    - If set to true, the DurationMonths/Years must be null",
          "type": "boolean"
        },
        "extensionOptionsUuid": {
          "format": "uuid",
          "description": "Optional agreement extension option\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "extensionOptionsUsed": {
          "format": "int32",
          "description": "Determines how many of the agreement available extension options that have been used",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "irrevocableUntil": {
          "format": "date-time",
          "description": "The agreement cannot be revoked before this date",
          "type": "string"
        }
      }
    },
    "ContractTerminationDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "terminatedAt": {
          "format": "date-time",
          "description": "The date at which the contract was terminated",
          "type": "string"
        },
        "terms": {
          "$ref": "#/definitions/ContractTerminationTermsRequestDTO",
          "description": "Contract termination terms"
        }
      }
    },
    "ContractPaymentsDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "external": {
          "description": "External payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRequestDTO"
          }
        },
        "internal": {
          "description": "Internal payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRequestDTO"
          }
        }
      }
    },
    "ContractValidityWriteRequestDTO": {
      "type": "object",
      "properties": {
        "enforcedValid": {
          "description": "Determines if the entity has been forced into valid state even if context properties would dictate otherwise (e.g. no longer in use)",
          "type": "boolean"
        },
        "validFrom": {
          "format": "date-time",
          "description": "If specified, the entity is valid from this date.\r\nMust be less than or equal to ValidTo",
          "type": "string"
        },
        "validTo": {
          "format": "date-time",
          "description": "If specified, the entity is valid up until and including this date.\r\nMust be greater than or equal to ValidFrom",
          "type": "string"
        }
      }
    },
    "ContractTerminationTermsRequestDTO": {
      "type": "object",
      "properties": {
        "noticePeriodMonthsUuid": {
          "format": "uuid",
          "description": "Optionally assigned notice period\r\nConstraints:\r\n    - If changed from current state, the option type must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "noticePeriodExtendsCurrent": {
          "description": "Elaborates the selection in NoticePeriod",
          "enum": [
            "EndOfCalendarYear",
            "EndOfQuarter",
            "EndOfMonth"
          ],
          "type": "string"
        },
        "noticeByEndOf": {
          "description": "Defines a fixed termination notice schema",
          "enum": [
            "EndOfCalendarYear",
            "EndOfQuarter",
            "EndOfMonth"
          ],
          "type": "string"
        }
      }
    },
    "PaymentRequestDTO": {
      "type": "object",
      "properties": {
        "organizationUnitUuid": {
          "format": "uuid",
          "description": "Optionally defined the organization unit responsible for the payment\r\nConstraints:\r\n    - Organization unit must belong to the same organization as the contract",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "acquisition": {
          "format": "int32",
          "description": "Part of payment which covers acquisition",
          "type": "integer"
        },
        "operation": {
          "format": "int32",
          "description": "Part of payment which covers operations",
          "type": "integer"
        },
        "other": {
          "format": "int32",
          "description": "Part of payment which is not classified as either operations or acquisition",
          "type": "integer"
        },
        "accountingEntry": {
          "type": "string"
        },
        "auditStatus": {
          "description": "The result of the specific payment audit",
          "enum": [
            "White",
            "Red",
            "Yellow",
            "Green"
          ],
          "type": "string"
        },
        "auditDate": {
          "format": "date-time",
          "description": "Defines the date at which the payment was audited",
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "UpdateContractRequestDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the contract.\r\nConstraints:\r\n    - Max length: 200 characters\r\n    - Must be unique within the organization",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateExternalReferenceDataWriteRequestDTO"
          }
        },
        "parentContractUuid": {
          "format": "uuid",
          "description": "UUID of the optional parent contract\r\nConstraints:\r\n    - Parent and child contract must belong to the same organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "general": {
          "$ref": "#/definitions/ContractGeneralDataWriteRequestDTO"
        },
        "procurement": {
          "$ref": "#/definitions/ContractProcurementDataWriteRequestDTO"
        },
        "supplier": {
          "$ref": "#/definitions/ContractSupplierDataWriteRequestDTO"
        },
        "responsible": {
          "$ref": "#/definitions/ContractResponsibleDataWriteRequestDTO"
        },
        "systemUsageUuids": {
          "description": "IT-System usages covered by this it-contract\r\nConstraints:\r\n    - System usages must belong to the same organization as the it-contract\r\n    - No duplicates",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "dataProcessingRegistrationUuids": {
          "description": "Data processing registrations associated with this it-contract\r\nConstraints:\r\n    - Must belong to the same organization as the it-contract\r\n    - No duplicates",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "paymentModel": {
          "$ref": "#/definitions/ContractPaymentModelDataWriteRequestDTO"
        },
        "agreementPeriod": {
          "$ref": "#/definitions/ContractAgreementPeriodDataWriteRequestDTO"
        },
        "termination": {
          "$ref": "#/definitions/ContractTerminationDataWriteRequestDTO"
        },
        "payments": {
          "$ref": "#/definitions/ContractPaymentsDataWriteRequestDTO"
        },
        "roles": {
          "description": "Role assignments\r\nConstraints:\r\n    - No duplicates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        }
      }
    },
    "CreateItInterfaceRequestDTO": {
      "required": [
        "organizationUuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "organizationUuid": {
          "format": "uuid",
          "description": "Reference to the organization to which the interface belongs",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "exposedBySystemUuid": {
          "format": "uuid",
          "description": "Optional reference to exposing it-system resource",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "deactivated": {
          "description": "Determines if the it-interface has been disabled",
          "type": "boolean"
        },
        "scope": {
          "description": "Scope (shared globally or only available for members of the owning org)",
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "itInterfaceTypeUuid": {
          "format": "uuid",
          "description": "Optional reference to the interface type option",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "data": {
          "description": "Optional interface data descriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItInterfaceDataRequestDTO"
          }
        },
        "note": {
          "description": "Optional internal note",
          "type": "string"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        }
      }
    },
    "ItInterfaceDataRequestDTO": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional description of the data",
          "type": "string"
        },
        "dataTypeUuid": {
          "format": "uuid",
          "description": "Optional reference to the it-interface-data-type option type\r\nConstraint:\r\n- If changing from previous state, the newly selected option must be available in the organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ItInterfaceResponseDTO": {
      "required": [
        "lastModified",
        "lastModifiedBy",
        "scope",
        "data",
        "organizationContext",
        "uuid",
        "name",
        "deactivated",
        "created",
        "createdBy"
      ],
      "type": "object",
      "properties": {
        "lastModified": {
          "format": "date-time",
          "description": "UTC timestamp of latest modification",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for last modification"
        },
        "scope": {
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "itInterfaceType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Cross reference to the interface-type used by the it-interface"
        },
        "data": {
          "description": "Optional interface data descriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItInterfaceDataResponseDTO"
          }
        },
        "organizationContext": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organization in which this it-interface master data was created"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-Interface",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "exposedBySystem": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "IT-System exposing this IT-Interface"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "notes": {
          "description": "Internal notes regarding the IT-System (usually written by Global Admin)",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        },
        "deactivated": {
          "description": "Active status",
          "type": "boolean"
        },
        "created": {
          "format": "date-time",
          "description": "Date of creation. (on some legacy systems , this information is not available. If so, it will be null)",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for creation"
        }
      }
    },
    "ItInterfaceDataResponseDTO": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional description of the data",
          "type": "string"
        },
        "dataType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional reference to the it-interface-data-type option type\r\nConstraint:\r\n- If changing from previous state, the newly selected option must be available in the organization"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID of the data description",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "UpdateItInterfaceRequestDTO": {
      "type": "object",
      "properties": {
        "exposedBySystemUuid": {
          "format": "uuid",
          "description": "Optional reference to exposing it-system resource",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "deactivated": {
          "description": "Determines if the it-interface has been disabled",
          "type": "boolean"
        },
        "scope": {
          "description": "Scope (shared globally or only available for members of the owning org)",
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "itInterfaceTypeUuid": {
          "format": "uuid",
          "description": "Optional reference to the interface type option",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "data": {
          "description": "Optional interface data descriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItInterfaceDataRequestDTO"
          }
        },
        "note": {
          "description": "Optional internal note",
          "type": "string"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        }
      }
    },
    "RightsHolderCreateItInterfaceRequestDTO": {
      "required": [
        "rightsHolderUuid",
        "exposedBySystemUuid",
        "name",
        "description",
        "urlReference"
      ],
      "type": "object",
      "properties": {
        "rightsHolderUuid": {
          "format": "uuid",
          "description": "UUID for owning organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-Interface\r\nIf no UUID is provided, KITOS will assign one.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "exposedBySystemUuid": {
          "format": "uuid",
          "description": "UUID for IT-System exposing this IT-Interface",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        }
      }
    },
    "RightsHolderItInterfaceResponseDTO": {
      "required": [
        "uuid",
        "name",
        "deactivated",
        "created",
        "createdBy"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-Interface",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "exposedBySystem": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "IT-System exposing this IT-Interface"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "notes": {
          "description": "Internal notes regarding the IT-System (usually written by Global Admin)",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        },
        "deactivated": {
          "description": "Active status",
          "type": "boolean"
        },
        "created": {
          "format": "date-time",
          "description": "Date of creation. (on some legacy systems , this information is not available. If so, it will be null)",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for creation"
        }
      }
    },
    "RightsHolderWritableItInterfacePropertiesDTO": {
      "required": [
        "exposedBySystemUuid",
        "name",
        "description",
        "urlReference"
      ],
      "type": "object",
      "properties": {
        "exposedBySystemUuid": {
          "format": "uuid",
          "description": "UUID for IT-System exposing this IT-Interface",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        }
      }
    },
    "RightsHolderPartialUpdateItInterfaceRequestDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of IT-Interface",
          "type": "string"
        },
        "exposedBySystemUuid": {
          "format": "uuid",
          "description": "UUID for IT-System exposing this IT-Interface",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "interfaceId": {
          "description": "Identifier for IT-Interface",
          "type": "string"
        },
        "version": {
          "description": "Version signifier for IT-Interface",
          "type": "string"
        },
        "description": {
          "description": "General description of the IT-Interface",
          "type": "string"
        },
        "urlReference": {
          "description": "Url reference for further information",
          "type": "string"
        }
      }
    },
    "DeactivationReasonRequestDTO": {
      "required": [
        "deactivationReason"
      ],
      "type": "object",
      "properties": {
        "deactivationReason": {
          "description": "Reason for deactivation",
          "type": "string"
        }
      }
    },
    "ItInterfacePermissionsResponseDTO": {
      "type": "object",
      "properties": {
        "deletionConflicts": {
          "type": "array",
          "items": {
            "enum": [
              "ExposedByItSystem"
            ],
            "type": "string"
          }
        },
        "read": {
          "description": "True when API client is allowed to READ the resource",
          "type": "boolean"
        },
        "modify": {
          "description": "True when API client is allowed to MODIFY the resource",
          "type": "boolean"
        },
        "delete": {
          "description": "True when the API client is allowed to DELETE the",
          "type": "boolean"
        }
      }
    },
    "ResourceCollectionPermissionsResponseDTO": {
      "type": "object",
      "properties": {
        "create": {
          "description": "True when API client is allowed to CREATE the resource",
          "type": "boolean"
        }
      }
    },
    "ItSystemResponseDTO": {
      "required": [
        "usingOrganizations",
        "lastModified",
        "lastModifiedBy",
        "scope",
        "organizationContext",
        "uuid",
        "name",
        "externalReferences",
        "kle",
        "deactivated",
        "created",
        "createdBy",
        "recommendedArchiveDuty"
      ],
      "type": "object",
      "properties": {
        "usingOrganizations": {
          "description": "Organizations using this IT-System",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShallowOrganizationResponseDTO"
          }
        },
        "lastModified": {
          "format": "date-time",
          "description": "UTC timestamp of latest modification",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for last modification"
        },
        "scope": {
          "description": "Scope of the registration\r\n- Local: The scope of the registration is local to the organization in which is was created\r\n- Global: The scope of the registration is global to KITOS and can be accessed and associated by authorized clients",
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "organizationContext": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organization in which this it-system master data was created"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-System",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "parentSystem": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "UUID for possible IT-System parent (if any)"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
          }
        },
        "kle": {
          "description": "List of KLE number representations as name and UUID pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "deactivated": {
          "description": "Active status",
          "type": "boolean"
        },
        "businessType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Name and UUID pair for IT-System business type"
        },
        "rightsHolder": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organizational information for IT-System rightsholder"
        },
        "created": {
          "format": "date-time",
          "description": "Date of creation (on some legacy systems , this information is not available. If so, it will be null)",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for creation."
        },
        "recommendedArchiveDuty": {
          "$ref": "#/definitions/RecommendedArchiveDutyResponseDTO",
          "description": "Archive duty recommendation from \"Rigsarkivet\""
        }
      }
    },
    "RecommendedArchiveDutyResponseDTO": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment attached to the recommendation",
          "type": "string"
        },
        "id": {
          "description": "Archive duty recommendation identifier",
          "enum": [
            "Undecided",
            "B",
            "K",
            "NoRecommendation"
          ],
          "type": "string"
        }
      }
    },
    "CreateItSystemRequestDTO": {
      "required": [
        "organizationUuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "organizationUuid": {
          "format": "uuid",
          "description": "UUID of the organization in which the it-system will be created",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "parentUuid": {
          "format": "uuid",
          "description": "UUID for possible IT-System parent (if any)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
          }
        },
        "businessTypeUuid": {
          "format": "uuid",
          "description": "UUID for IT-System business type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "kleUuids": {
          "description": "UUID's for KLE numbers categorizing this IT-System",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "rightsHolderUuid": {
          "format": "uuid",
          "description": "Optional rightsholder organization reference uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "scope": {
          "description": "Scope (if not provided, it will default to \"Global\"",
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "recommendedArchiveDuty": {
          "$ref": "#/definitions/RecommendedArchiveDutyRequestDTO"
        },
        "deactivated": {
          "description": "Determines if the system has been deactivated from being taken into use",
          "type": "boolean"
        }
      }
    },
    "RecommendedArchiveDutyRequestDTO": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment attached to the recommendation\r\nConstraints:\r\n- Only valid if 'Id' is NOT null or 'Undecided'",
          "type": "string"
        },
        "id": {
          "description": "Archive duty recommendation identifier",
          "enum": [
            "Undecided",
            "B",
            "K",
            "NoRecommendation"
          ],
          "type": "string"
        }
      }
    },
    "UpdateItSystemRequestDTO": {
      "type": "object",
      "properties": {
        "parentUuid": {
          "format": "uuid",
          "description": "UUID for possible IT-System parent (if any)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "deactivated": {
          "description": "Determines if the system has been deactivated from being taken into use",
          "type": "boolean"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateExternalReferenceDataWriteRequestDTO"
          }
        },
        "businessTypeUuid": {
          "format": "uuid",
          "description": "UUID for IT-System business type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "kleUuids": {
          "description": "UUID's for KLE numbers categorizing this IT-System",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "rightsHolderUuid": {
          "format": "uuid",
          "description": "Optional rightsholder organization reference uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "scope": {
          "description": "Scope (if not provided, it will default to \"Global\"",
          "enum": [
            "Local",
            "Global"
          ],
          "type": "string"
        },
        "recommendedArchiveDuty": {
          "$ref": "#/definitions/RecommendedArchiveDutyRequestDTO"
        }
      }
    },
    "RegistrationHierarchyNodeWithActivationStatusResponseDTO": {
      "required": [
        "node"
      ],
      "type": "object",
      "properties": {
        "deactivated": {
          "description": "Active status of the node",
          "type": "boolean"
        },
        "node": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Current node in the hierarchy"
        },
        "parent": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Parent of the current node"
        }
      }
    },
    "RightsHolderItSystemResponseDTO": {
      "required": [
        "uuid",
        "name",
        "externalReferences",
        "kle",
        "deactivated",
        "created",
        "createdBy",
        "recommendedArchiveDuty"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-System",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "parentSystem": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "UUID for possible IT-System parent (if any)"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
          }
        },
        "kle": {
          "description": "List of KLE number representations as name and UUID pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "deactivated": {
          "description": "Active status",
          "type": "boolean"
        },
        "businessType": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Name and UUID pair for IT-System business type"
        },
        "rightsHolder": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organizational information for IT-System rightsholder"
        },
        "created": {
          "format": "date-time",
          "description": "Date of creation (on some legacy systems , this information is not available. If so, it will be null)",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for creation."
        },
        "recommendedArchiveDuty": {
          "$ref": "#/definitions/RecommendedArchiveDutyResponseDTO",
          "description": "Archive duty recommendation from \"Rigsarkivet\""
        }
      }
    },
    "RightsHolderFullItSystemRequestDTO": {
      "description": "Defines a full it-system definition used for updates and replacement operations",
      "required": [
        "rightsHolderUuid",
        "name",
        "description"
      ],
      "type": "object",
      "properties": {
        "rightsHolderUuid": {
          "format": "uuid",
          "description": "UUID for owning organization",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID for IT-System\r\nIf no uuid is provided, KITOS will assign one automatically",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "parentUuid": {
          "format": "uuid",
          "description": "UUID for possible IT-System parent (if any)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
          }
        },
        "businessTypeUuid": {
          "format": "uuid",
          "description": "UUID for IT-System business type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "kleUuids": {
          "description": "UUID's for KLE numbers categorizing this IT-System",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "RightsHolderUpdateSystemPropertiesRequestDTO": {
      "type": "object",
      "properties": {
        "parentUuid": {
          "format": "uuid",
          "description": "UUID for possible IT-System parent (if any)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of IT-System",
          "type": "string"
        },
        "formerName": {
          "description": "Former name of IT-System (if any)",
          "type": "string"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateExternalReferenceDataWriteRequestDTO"
          }
        },
        "businessTypeUuid": {
          "format": "uuid",
          "description": "UUID for IT-System business type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "kleUuids": {
          "description": "UUID's for KLE numbers categorizing this IT-System",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "ItSystemPermissionsResponseDTO": {
      "type": "object",
      "properties": {
        "deletionConflicts": {
          "type": "array",
          "items": {
            "enum": [
              "HasItSystemUsages",
              "HasChildSystems",
              "HasInterfaceExposures"
            ],
            "type": "string"
          }
        },
        "read": {
          "description": "True when API client is allowed to READ the resource",
          "type": "boolean"
        },
        "modify": {
          "description": "True when API client is allowed to MODIFY the resource",
          "type": "boolean"
        },
        "delete": {
          "description": "True when the API client is allowed to DELETE the",
          "type": "boolean"
        }
      }
    },
    "ItSystemUsageResponseDTO": {
      "description": "NOTE: IT-System usages are registrations which extend those of a system within the context of a specific organization.\r\nIT-System usages have their own lifecycle and identity but the human readable name is inherited from the system context.",
      "required": [
        "uuid",
        "createdBy",
        "lastModified",
        "lastModifiedBy",
        "systemContext",
        "organizationContext",
        "general",
        "roles",
        "organizationUsage",
        "localKLEDeviations",
        "externalReferences",
        "archiving",
        "gdpr",
        "outgoingSystemRelations"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID of the IT-System usage registration instance",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "User who created the system usage"
        },
        "lastModified": {
          "format": "date-time",
          "description": "UTC timestamp of latest modification",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Responsible for last modification"
        },
        "systemContext": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "IT-System which this organizational usage is based on"
        },
        "organizationContext": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO",
          "description": "Organization in which the system usage has been created"
        },
        "general": {
          "$ref": "#/definitions/GeneralDataResponseDTO"
        },
        "roles": {
          "description": "A collection of IT-System usage role option assignments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResponseDTO"
          }
        },
        "organizationUsage": {
          "$ref": "#/definitions/OrganizationUsageResponseDTO",
          "description": "Defines the use of the system within the organization"
        },
        "localKLEDeviations": {
          "$ref": "#/definitions/LocalKLEDeviationsResponseDTO",
          "description": "Defines IT-System KLE deviations locally within an organization. All deviations are in the context of the inherited deviations which are found on the IT-System context"
        },
        "externalReferences": {
          "description": "User defined external references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataResponseDTO"
          }
        },
        "archiving": {
          "$ref": "#/definitions/ArchivingRegistrationsResponseDTO",
          "description": "Archiving-specific registrations"
        },
        "gdpr": {
          "$ref": "#/definitions/GDPRRegistrationsResponseDTO",
          "description": "GDPR-specific registrations"
        },
        "outgoingSystemRelations": {
          "description": "Contains registered relations to other system usages within the organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutgoingSystemRelationResponseDTO"
          }
        }
      }
    },
    "GeneralDataResponseDTO": {
      "required": [
        "validity"
      ],
      "type": "object",
      "properties": {
        "localSystemId": {
          "description": "System Id assigned locally within the organization",
          "type": "string"
        },
        "localCallName": {
          "description": "Call name used locally within the organization",
          "type": "string"
        },
        "dataClassification": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional classification of the registered data"
        },
        "notes": {
          "description": "Notes relevant to the system usage within the organization",
          "type": "string"
        },
        "systemVersion": {
          "description": "Locally registered system version",
          "type": "string"
        },
        "numberOfExpectedUsers": {
          "$ref": "#/definitions/ExpectedUsersIntervalDTO",
          "description": "Interval which defines the number of expected users this system has within the organization"
        },
        "validity": {
          "$ref": "#/definitions/ItSystemUsageValidityResponseDTO",
          "description": "Specifies the validity of this system usage"
        },
        "mainContract": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Defines the master contract for this system (many contracts can point to a system usage but only one can be the master contract)"
        }
      }
    },
    "OrganizationUsageResponseDTO": {
      "required": [
        "usingOrganizationUnits"
      ],
      "type": "object",
      "properties": {
        "usingOrganizationUnits": {
          "description": "A collection of organization units which have taken this system into use",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "responsibleOrganizationUnit": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Out of all of the using organization units, this one is responsible for the system within the organization."
        }
      }
    },
    "LocalKLEDeviationsResponseDTO": {
      "description": "Defines IT-System KLE deviations locally within an organization. All deviations are in the context of the inherited deviations which are found on the IT-System",
      "required": [
        "removedKLE",
        "addedKLE"
      ],
      "type": "object",
      "properties": {
        "removedKLE": {
          "description": "Inherited KLE which have been removed locally",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "addedKLE": {
          "description": "KLE which has been added locally",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        }
      }
    },
    "ArchivingRegistrationsResponseDTO": {
      "required": [
        "journalPeriods"
      ],
      "type": "object",
      "properties": {
        "archiveDuty": {
          "description": "Archive duty for the system in the organization context. The recommendation from the archiving authority is found on the IT-System context.",
          "enum": [
            "Undecided",
            "B",
            "K",
            "Unknown"
          ],
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Defines the archiving type associated with the it-system"
        },
        "location": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Identifies the physical location for archive receiving the data"
        },
        "testLocation": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Identifies the physical location for the archiving test"
        },
        "supplier": {
          "$ref": "#/definitions/ShallowOrganizationResponseDTO"
        },
        "active": {
          "description": "Determines if any archiving has occurred from this system",
          "type": "boolean"
        },
        "notes": {
          "description": "Archiving notes",
          "type": "string"
        },
        "frequencyInMonths": {
          "format": "int32",
          "description": "Determines the frequency of the archiving activity",
          "type": "integer"
        },
        "documentBearing": {
          "type": "boolean"
        },
        "journalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalPeriodResponseDTO"
          }
        }
      }
    },
    "GDPRRegistrationsResponseDTO": {
      "required": [
        "dataSensitivityLevels",
        "sensitivePersonData",
        "specificPersonalData",
        "registeredDataCategories",
        "technicalPrecautionsApplied"
      ],
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string"
        },
        "businessCritical": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "hostedAt": {
          "enum": [
            "Undecided",
            "OnPremise",
            "External"
          ],
          "type": "string"
        },
        "directoryDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "dataSensitivityLevels": {
          "type": "array",
          "items": {
            "enum": [
              "None",
              "PersonData",
              "SensitiveData",
              "LegalData"
            ],
            "type": "string"
          }
        },
        "sensitivePersonData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "specificPersonalData": {
          "type": "array",
          "items": {
            "enum": [
              "CprNumber",
              "SocialProblems",
              "OtherPrivateMatters"
            ],
            "type": "string"
          }
        },
        "registeredDataCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityNamePairResponseDTO"
          }
        },
        "technicalPrecautionsInPlace": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "technicalPrecautionsApplied": {
          "type": "array",
          "items": {
            "enum": [
              "Encryption",
              "Pseudonymization",
              "AccessControl",
              "Logging"
            ],
            "type": "string"
          }
        },
        "technicalPrecautionsDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "userSupervision": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "userSupervisionDate": {
          "format": "date-time",
          "type": "string"
        },
        "userSupervisionDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "riskAssessmentConducted": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "riskAssessmentConductedDate": {
          "format": "date-time",
          "type": "string"
        },
        "riskAssessmentResult": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Undecided"
          ],
          "type": "string"
        },
        "riskAssessmentDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "riskAssessmentNotes": {
          "type": "string"
        },
        "plannedRiskAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "dpiaConducted": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "dpiaDate": {
          "format": "date-time",
          "type": "string"
        },
        "dpiaDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "retentionPeriodDefined": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "nextDataRetentionEvaluationDate": {
          "format": "date-time",
          "type": "string"
        },
        "dataRetentionEvaluationFrequencyInMonths": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OutgoingSystemRelationResponseDTO": {
      "required": [
        "toSystemUsage",
        "uuid"
      ],
      "type": "object",
      "properties": {
        "toSystemUsage": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Identifies the system usage the relation points to"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID of the system relation registration",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "relationInterface": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "The relation uses the interface"
        },
        "associatedContract": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "The contract association of the system relation"
        },
        "relationFrequency": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Frequency of the relation"
        },
        "description": {
          "type": "string"
        },
        "urlReference": {
          "type": "string"
        }
      }
    },
    "ExpectedUsersIntervalDTO": {
      "type": "object",
      "properties": {
        "lowerBound": {
          "format": "int32",
          "description": "Optional lower bound.\r\nIf left unspecified, the interval has no lower bound.",
          "type": "integer"
        },
        "upperBound": {
          "format": "int32",
          "description": "Optional upper bound\r\nIf left unspecified the interval has no upper bound.",
          "type": "integer"
        }
      }
    },
    "ItSystemUsageValidityResponseDTO": {
      "type": "object",
      "properties": {
        "valid": {
          "description": "Determines if the entity is considered valid. This is computed from ValidAccordingToValidityPeriod, ValidAccordingToLifeCycle and ValidAccordingToMainContract.",
          "type": "boolean"
        },
        "validAccordingToValidityPeriod": {
          "description": "Determines if the entity is considered valid based on the validity period defined by ValidFrom and ValidTo",
          "type": "boolean"
        },
        "validAccordingToLifeCycle": {
          "description": "Determines if the entity is considered valid based on the Life Cycle",
          "type": "boolean"
        },
        "validAccordingToMainContract": {
          "description": "Determines if the entity is considered valid based on the validity of the related contract",
          "type": "boolean"
        },
        "lifeCycleStatus": {
          "description": "Life cycle status of the entity",
          "enum": [
            "Undecided",
            "NotInUse",
            "PhasingIn",
            "Operational",
            "PhasingOut"
          ],
          "type": "string"
        },
        "validFrom": {
          "format": "date-time",
          "description": "If specified, the entity is valid from this date.",
          "type": "string"
        },
        "validTo": {
          "format": "date-time",
          "description": "If specified, the entity is valid up until and including this date.",
          "type": "string"
        }
      }
    },
    "JournalPeriodResponseDTO": {
      "required": [
        "uuid",
        "archiveId",
        "startDate",
        "endDate",
        "approved"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "archiveId": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Constraint StartDate must be less than or equal to EndDate",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Constraint EndDate must be greater than or equal to StartDate",
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        }
      }
    },
    "SimpleLinkDTO": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name displayed to the user in kitos",
          "type": "string"
        },
        "url": {
          "description": "External link",
          "type": "string"
        }
      }
    },
    "CreateItSystemUsageRequestDTO": {
      "required": [
        "systemUuid",
        "organizationUuid"
      ],
      "type": "object",
      "properties": {
        "systemUuid": {
          "format": "uuid",
          "description": "Points to the main system which the usage will extend.\r\nConstraints:\r\n    - must be accessible to the authorized user\r\n    - must not already be in use in the organization\r\n    - system must be active iow. not in a disabled state",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "organizationUuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "general": {
          "$ref": "#/definitions/GeneralDataWriteRequestDTO"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraint:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReferenceDataWriteRequestDTO"
          }
        },
        "archiving": {
          "$ref": "#/definitions/ArchivingCreationRequestDTO",
          "description": "Defines archiving related properties for this system usage"
        },
        "roles": {
          "description": "A collection of IT-System usage role option assignments\r\nConstraint: Duplicates are not allowed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        },
        "organizationUsage": {
          "$ref": "#/definitions/OrganizationUsageWriteRequestDTO",
          "description": "Contains organizational references for the system usage"
        },
        "localKleDeviations": {
          "$ref": "#/definitions/LocalKLEDeviationsRequestDTO",
          "description": "Added/removed KLE when compared to inherited KLE from the IT-System"
        },
        "gdpr": {
          "$ref": "#/definitions/GDPRWriteRequestDTO",
          "description": "GDPR-specific registrations"
        }
      }
    },
    "GeneralDataWriteRequestDTO": {
      "type": "object",
      "properties": {
        "localSystemId": {
          "description": "System Id assigned locally within the organization\r\nMax length: 200",
          "type": "string"
        },
        "localCallName": {
          "description": "Call name used locally within the organization\r\nMax length: 100",
          "type": "string"
        },
        "dataClassificationUuid": {
          "format": "uuid",
          "description": "Optional classification of the registered data\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "notes": {
          "description": "Notes relevant to the system usage within the organization",
          "type": "string"
        },
        "systemVersion": {
          "description": "Locally registered system version\r\nMax length: 100",
          "type": "string"
        },
        "numberOfExpectedUsers": {
          "$ref": "#/definitions/ExpectedUsersIntervalDTO",
          "description": "Interval which defines the number of expected users this system has within the organization\r\nNOTE: This property is currently constrained to accept only the following values [LowerBound,UpperBound]: {[0,9],[10,50],[50,100],[100,null]}\r\nWe expect this to change in later releases of KITOS and for that reason we do not expose an enumeration field."
        },
        "validity": {
          "$ref": "#/definitions/ItSystemUsageValidityWriteRequestDTO",
          "description": "Validity of the system usage"
        }
      }
    },
    "ArchivingCreationRequestDTO": {
      "type": "object",
      "properties": {
        "journalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalPeriodDTO"
          }
        },
        "archiveDuty": {
          "description": "Archive duty for the system in the organization context. The recommendation from the archiving authority is found on the IT-System context.",
          "enum": [
            "Undecided",
            "B",
            "K",
            "Unknown"
          ],
          "type": "string"
        },
        "typeUuid": {
          "format": "uuid",
          "description": "Defines the archiving type associated with the it-system\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "locationUuid": {
          "format": "uuid",
          "description": "Identifies the physical location for archive receiving the data\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "testLocationUuid": {
          "format": "uuid",
          "description": "Identifies the physical location for the archiving test\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "supplierOrganizationUuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "active": {
          "description": "Determines if any archiving has occurred from this system",
          "type": "boolean"
        },
        "notes": {
          "description": "Archiving notes",
          "type": "string"
        },
        "frequencyInMonths": {
          "format": "int32",
          "description": "Determines the frequency of the archiving activity",
          "type": "integer"
        },
        "documentBearing": {
          "type": "boolean"
        }
      }
    },
    "OrganizationUsageWriteRequestDTO": {
      "type": "object",
      "properties": {
        "usingOrganizationUnitUuids": {
          "description": "UUIds of Organization units using this system",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "responsibleOrganizationUnitUuid": {
          "format": "uuid",
          "description": "Out of all of the using organization units, this one is responsible for the system within the organization.\r\nConstraint: The uuid provided must also be present in UsingOrganizationUnitUuids",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "LocalKLEDeviationsRequestDTO": {
      "type": "object",
      "properties": {
        "removedKLEUuids": {
          "description": "Inherited KLE which have been removed locally\r\nConstraints:\r\n    - No duplicates\r\n    - Contents CANNOT intersect with AddedKLEUuids\r\n    - Contents MUST be a complete subset of the KLE set on the system context",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "addedKLEUuids": {
          "description": "KLE which has been added locally\r\nConstraints:\r\n    - No duplicates\r\n    - Contents CANNOT intersect with RemovedKLEUuids\r\n    - Contents CANNOT be a subset of the KLE set on the system context",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GDPRWriteRequestDTO": {
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string"
        },
        "businessCritical": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "hostedAt": {
          "enum": [
            "Undecided",
            "OnPremise",
            "External"
          ],
          "type": "string"
        },
        "directoryDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO",
          "description": "Constraints: Name: 150 characters"
        },
        "dataSensitivityLevels": {
          "type": "array",
          "items": {
            "enum": [
              "None",
              "PersonData",
              "SensitiveData",
              "LegalData"
            ],
            "type": "string"
          }
        },
        "sensitivePersonDataUuids": {
          "description": "Constraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "specificPersonalData": {
          "description": "Constraint: Can only be added if DataSensitivityLevelChoice.PersonData is present in DataSensitivityLevels field",
          "type": "array",
          "items": {
            "enum": [
              "CprNumber",
              "SocialProblems",
              "OtherPrivateMatters"
            ],
            "type": "string"
          }
        },
        "registeredDataCategoryUuids": {
          "description": "Constraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "technicalPrecautionsInPlace": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "technicalPrecautionsApplied": {
          "type": "array",
          "items": {
            "enum": [
              "Encryption",
              "Pseudonymization",
              "AccessControl",
              "Logging"
            ],
            "type": "string"
          }
        },
        "technicalPrecautionsDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "userSupervision": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "userSupervisionDate": {
          "format": "date-time",
          "type": "string"
        },
        "userSupervisionDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "riskAssessmentConducted": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "riskAssessmentConductedDate": {
          "format": "date-time",
          "type": "string"
        },
        "riskAssessmentResult": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Undecided"
          ],
          "type": "string"
        },
        "plannedRiskAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "riskAssessmentDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO",
          "description": "Constraints:\r\n- Name: 150 characters"
        },
        "riskAssessmentNotes": {
          "type": "string"
        },
        "dpiaConducted": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "dpiaDate": {
          "format": "date-time",
          "type": "string"
        },
        "dpiaDocumentation": {
          "$ref": "#/definitions/SimpleLinkDTO"
        },
        "retentionPeriodDefined": {
          "enum": [
            "No",
            "Yes",
            "DontKnow",
            "Undecided"
          ],
          "type": "string"
        },
        "nextDataRetentionEvaluationDate": {
          "format": "date-time",
          "type": "string"
        },
        "dataRetentionEvaluationFrequencyInMonths": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ItSystemUsageValidityWriteRequestDTO": {
      "type": "object",
      "properties": {
        "lifeCycleStatus": {
          "description": "Determines the life cycle status of the system (e.g. Not in use, Operational)",
          "enum": [
            "Undecided",
            "NotInUse",
            "PhasingIn",
            "Operational",
            "PhasingOut"
          ],
          "type": "string"
        },
        "validFrom": {
          "format": "date-time",
          "description": "If specified, the entity is valid from this date.\r\nMust be less than or equal to ValidTo",
          "type": "string"
        },
        "validTo": {
          "format": "date-time",
          "description": "If specified, the entity is valid up until and including this date.\r\nMust be greater than or equal to ValidFrom",
          "type": "string"
        }
      }
    },
    "JournalPeriodDTO": {
      "required": [
        "archiveId",
        "startDate",
        "endDate",
        "approved"
      ],
      "type": "object",
      "properties": {
        "archiveId": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Constraint StartDate must be less than or equal to EndDate",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Constraint EndDate must be greater than or equal to StartDate",
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        }
      }
    },
    "UpdateItSystemUsageRequestDTO": {
      "type": "object",
      "properties": {
        "general": {
          "$ref": "#/definitions/GeneralDataUpdateRequestDTO"
        },
        "externalReferences": {
          "description": "User defined external references.\r\nThe external reference marked as \"master reference\" will be shown in overviews\r\nConstraints:\r\n    - If the list is not empty one (and only one) must be marked as the master reference.\r\n    - If the reference has a uuid it will update an existing reference (with the same uuid), uuid must exist\r\n    - If the reference has no uuid, a new External Reference will be created\r\n    - Existing references will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateExternalReferenceDataWriteRequestDTO"
          }
        },
        "archiving": {
          "$ref": "#/definitions/ArchivingUpdateRequestDTO",
          "description": "Defines archiving related properties for this system usage"
        },
        "roles": {
          "description": "A collection of IT-System usage role option assignments\r\nConstraint: Duplicates are not allowed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentRequestDTO"
          }
        },
        "organizationUsage": {
          "$ref": "#/definitions/OrganizationUsageWriteRequestDTO",
          "description": "Contains organizational references for the system usage"
        },
        "localKleDeviations": {
          "$ref": "#/definitions/LocalKLEDeviationsRequestDTO",
          "description": "Added/removed KLE when compared to inherited KLE from the IT-System"
        },
        "gdpr": {
          "$ref": "#/definitions/GDPRWriteRequestDTO",
          "description": "GDPR-specific registrations"
        }
      }
    },
    "GeneralDataUpdateRequestDTO": {
      "type": "object",
      "properties": {
        "mainContractUuid": {
          "format": "uuid",
          "description": "Defines the master contract for this system (many contracts can point to a system usage but only one can be the master contract)\r\nConstraint: The contract provided MUST point to this system usage for it to be selected as \"main contract\".",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "localSystemId": {
          "description": "System Id assigned locally within the organization\r\nMax length: 200",
          "type": "string"
        },
        "localCallName": {
          "description": "Call name used locally within the organization\r\nMax length: 100",
          "type": "string"
        },
        "dataClassificationUuid": {
          "format": "uuid",
          "description": "Optional classification of the registered data\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "notes": {
          "description": "Notes relevant to the system usage within the organization",
          "type": "string"
        },
        "systemVersion": {
          "description": "Locally registered system version\r\nMax length: 100",
          "type": "string"
        },
        "numberOfExpectedUsers": {
          "$ref": "#/definitions/ExpectedUsersIntervalDTO",
          "description": "Interval which defines the number of expected users this system has within the organization\r\nNOTE: This property is currently constrained to accept only the following values [LowerBound,UpperBound]: {[0,9],[10,50],[50,100],[100,null]}\r\nWe expect this to change in later releases of KITOS and for that reason we do not expose an enumeration field."
        },
        "validity": {
          "$ref": "#/definitions/ItSystemUsageValidityWriteRequestDTO",
          "description": "Validity of the system usage"
        }
      }
    },
    "ArchivingUpdateRequestDTO": {
      "type": "object",
      "properties": {
        "journalPeriods": {
          "description": "Updated journal periods\r\nConstraints:\r\n    - If the period has a uuid it will update an existing period (with the same uuid), uuid must exist\r\n    - If the period has no uuid, a new Period will be created\r\n    - Existing periods will be replaced by the input data, so unless identified using uuid in the updates, the existing references will be removed,\r\n      so if you want to retain \"identity\" of periods between updates make sure to specify the uuid.\r\n      Otherwise the data will be as the input dictates but the uuids will have changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalPeriodUpdateRequestDTO"
          }
        },
        "archiveDuty": {
          "description": "Archive duty for the system in the organization context. The recommendation from the archiving authority is found on the IT-System context.",
          "enum": [
            "Undecided",
            "B",
            "K",
            "Unknown"
          ],
          "type": "string"
        },
        "typeUuid": {
          "format": "uuid",
          "description": "Defines the archiving type associated with the it-system\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "locationUuid": {
          "format": "uuid",
          "description": "Identifies the physical location for archive receiving the data\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "testLocationUuid": {
          "format": "uuid",
          "description": "Identifies the physical location for the archiving test\r\nConstraint: If an update changes this field, the option identified must be currently available in the organization context",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "supplierOrganizationUuid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "active": {
          "description": "Determines if any archiving has occurred from this system",
          "type": "boolean"
        },
        "notes": {
          "description": "Archiving notes",
          "type": "string"
        },
        "frequencyInMonths": {
          "format": "int32",
          "description": "Determines the frequency of the archiving activity",
          "type": "integer"
        },
        "documentBearing": {
          "type": "boolean"
        }
      }
    },
    "JournalPeriodUpdateRequestDTO": {
      "required": [
        "archiveId",
        "startDate",
        "endDate",
        "approved"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "Optionally references an existing, specific journal period\r\nNOTE: If provided, an existing period with the same uuid must exist",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "archiveId": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Constraint StartDate must be less than or equal to EndDate",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Constraint EndDate must be greater than or equal to StartDate",
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        }
      }
    },
    "ResourcePermissionsResponseDTO": {
      "type": "object",
      "properties": {
        "read": {
          "description": "True when API client is allowed to READ the resource",
          "type": "boolean"
        },
        "modify": {
          "description": "True when API client is allowed to MODIFY the resource",
          "type": "boolean"
        },
        "delete": {
          "description": "True when the API client is allowed to DELETE the",
          "type": "boolean"
        }
      }
    },
    "IncomingSystemRelationResponseDTO": {
      "required": [
        "fromSystemUsage",
        "uuid"
      ],
      "type": "object",
      "properties": {
        "fromSystemUsage": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Identifies the origin system usage of the incoming system relation"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID of the system relation registration",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "relationInterface": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "The relation uses the interface"
        },
        "associatedContract": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "The contract association of the system relation"
        },
        "relationFrequency": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Frequency of the relation"
        },
        "description": {
          "type": "string"
        },
        "urlReference": {
          "type": "string"
        }
      }
    },
    "SystemRelationWriteRequestDTO": {
      "required": [
        "toSystemUsageUuid"
      ],
      "type": "object",
      "properties": {
        "toSystemUsageUuid": {
          "format": "uuid",
          "description": "Identifies the system usage the relation points to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "relationInterfaceUuid": {
          "format": "uuid",
          "description": "The relation uses the interface\r\nThe interface must be exposed by the system identified by ToSystemUsageUuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "associatedContractUuid": {
          "format": "uuid",
          "description": "The contract association of the system relation\r\nThe contract must be defined in the same organization as the it-system usages.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "relationFrequencyUuid": {
          "format": "uuid",
          "description": "Frequency of the relation\r\nIf part of a new relation or a change, the option must be enabled in the organization context.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "description": {
          "type": "string"
        },
        "urlReference": {
          "type": "string"
        }
      }
    },
    "KLEDetailsDTOIEnumerableVersionedKLEResponseDTO": {
      "description": "Wraps the KLE response payload with a reference to the data from api.kle-online.dk",
      "required": [
        "referenceVersion",
        "payload"
      ],
      "type": "object",
      "properties": {
        "referenceVersion": {
          "format": "date-time",
          "description": "Defines the version of KLE (from api.kle-online.dk) which the content in 'payload' is based on.",
          "type": "string"
        },
        "payload": {
          "description": "Requested payload",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KLEDetailsDTO"
          }
        }
      }
    },
    "KLEDetailsDTO": {
      "required": [
        "uuid",
        "kleNumber",
        "description"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "format": "uuid",
          "description": "UUID of the KLE number",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "kleNumber": {
          "description": "KLE number from KLE-Online e.g. 00.01.10",
          "type": "string"
        },
        "description": {
          "description": "KLE description from KLE-Online",
          "type": "string"
        },
        "parentKle": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional parent KLE"
        }
      }
    },
    "KLEDetailsDTOVersionedKLEResponseDTO": {
      "description": "Wraps the KLE response payload with a reference to the data from api.kle-online.dk",
      "required": [
        "referenceVersion",
        "payload"
      ],
      "type": "object",
      "properties": {
        "referenceVersion": {
          "format": "date-time",
          "description": "Defines the version of KLE (from api.kle-online.dk) which the content in 'payload' is based on.",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/KLEDetailsDTO",
          "description": "Requested payload"
        }
      }
    },
    "OrganizationResponseDTO": {
      "required": [
        "organizationType",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "organizationType": {
          "enum": [
            "Municipality",
            "CommunityOfInterest",
            "Company",
            "OtherPublicAuthority"
          ],
          "type": "string",
          "readOnly": true
        },
        "cvr": {
          "description": "Organizational CVR identifier, if any",
          "type": "string",
          "readOnly": true
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "OrganizationUserResponseDTO": {
      "required": [
        "firstName",
        "email",
        "apiAccess",
        "roles",
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "description": "User's first name",
          "type": "string"
        },
        "lastName": {
          "description": "User's last name(s)",
          "type": "string"
        },
        "email": {
          "description": "User's email",
          "type": "string"
        },
        "phoneNumber": {
          "description": "User's phone number",
          "type": "string"
        },
        "apiAccess": {
          "description": "Determines if the user credentials can be used to request a KITOS API token",
          "type": "boolean"
        },
        "roles": {
          "description": "Roles assigned to the user within the context of the organization",
          "type": "array",
          "items": {
            "enum": [
              "User",
              "LocalAdmin",
              "OrganizationModuleAdmin",
              "SystemModuleAdmin",
              "ContractModuleAdmin",
              "RightsHolderAccess"
            ],
            "type": "string"
          }
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    },
    "OrganizationUnitResponseDTO": {
      "required": [
        "uuid",
        "name"
      ],
      "type": "object",
      "properties": {
        "parentOrganizationUnit": {
          "$ref": "#/definitions/IdentityNamePairResponseDTO",
          "description": "Optional Link to parent unit in the organizational hierarchy"
        },
        "ean": {
          "format": "int64",
          "description": "Optional EAN number for the organization unit.",
          "type": "integer"
        },
        "unitId": {
          "description": "Optional Organization Unit Id",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "description": "UUID which is unique within collection of entities of the same type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Human readable name of the entity",
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "KITOS TOKEN": {
      "type": "apiKey",
      "description": "The KITOS TOKEN",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [],
  "tags": []
}